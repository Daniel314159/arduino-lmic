!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AES_CTR	oslmic.h	290;"	d
AES_DEC	oslmic.h	288;"	d
AES_ENC	oslmic.h	287;"	d
AES_MIC	oslmic.h	289;"	d
AES_MICNOAUX	oslmic.h	291;"	d
AESaux	oslmic.h	90;"	d
AESkey	oslmic.h	89;"	d
AIRTIME_BCN	lorabase.h	/^enum { AIRTIME_BCN       = 72192 };  \/\/ micros$/;"	e	enum:__anon90
AIRTIME_BCN	lorabase.h	/^enum { AIRTIME_BCN      = 72192 };  \/\/ micros ... TODO(tmm@mcci.com) check.$/;"	e	enum:__anon101
AIRTIME_BCN	lorabase.h	/^enum { AIRTIME_BCN = 144384 };  \/\/ micros$/;"	e	enum:__anon113
AIRTIME_BCN	lorabase.h	/^enum { AIRTIME_BCN = 144384 };  \/\/ micros$/;"	e	enum:__anon125
AIRTIME_BCN	lorabase.h	/^enum { AIRTIME_BCN = 144384 };  \/\/ micros$/;"	e	enum:__anon79
AIRTIME_BCN_osticks	lmic_bandplan.h	163;"	d
ARDUINO_LMIC_PROJECT_CONFIG_H	lmic_config_preconditions.h	58;"	d
AS923_DR_FSK	lorabase_as923.h	/^        AS923_DR_FSK,$/;"	e	enum:_dr_as923_t
AS923_DR_NONE	lorabase_as923.h	/^        AS923_DR_NONE$/;"	e	enum:_dr_as923_t
AS923_DR_SF10	lorabase_as923.h	/^        AS923_DR_SF10,$/;"	e	enum:_dr_as923_t
AS923_DR_SF11	lorabase_as923.h	/^        AS923_DR_SF11,$/;"	e	enum:_dr_as923_t
AS923_DR_SF12	lorabase_as923.h	/^        AS923_DR_SF12 = 0,$/;"	e	enum:_dr_as923_t
AS923_DR_SF7	lorabase_as923.h	/^        AS923_DR_SF7,$/;"	e	enum:_dr_as923_t
AS923_DR_SF7B	lorabase_as923.h	/^        AS923_DR_SF7B,$/;"	e	enum:_dr_as923_t
AS923_DR_SF8	lorabase_as923.h	/^        AS923_DR_SF8,$/;"	e	enum:_dr_as923_t
AS923_DR_SF9	lorabase_as923.h	/^        AS923_DR_SF9,$/;"	e	enum:_dr_as923_t
AS923_F1	lorabase_as923.h	/^        AS923_F1    = 923200000,      \/\/ g1   SF7-12$/;"	e	enum:__anon153
AS923_F2	lorabase_as923.h	/^        AS923_F2    = 923400000,      \/\/ g1   SF7-12$/;"	e	enum:__anon153
AS923_FBCN	lorabase_as923.h	/^        AS923_FBCN  = 923400000,      \/\/      default BCN, DR3$/;"	e	enum:__anon153
AS923_FDOWN	lorabase_as923.h	/^        AS923_FDOWN = 923200000,      \/\/      (RX2 freq, DR2)$/;"	e	enum:__anon153
AS923_FPING	lorabase_as923.h	/^        AS923_FPING = 923400000,      \/\/      default ping, DR3$/;"	e	enum:__anon153
AS923_FREQ_MAX	lorabase_as923.h	/^        AS923_FREQ_MAX = 928000000$/;"	e	enum:__anon154
AS923_FREQ_MIN	lorabase_as923.h	/^        AS923_FREQ_MIN = 915000000,$/;"	e	enum:__anon154
AS923_LMIC_REGION_EIRP	lorabase_as923.h	/^enum { AS923_LMIC_REGION_EIRP = 1 };         \/\/ region uses EIRP$/;"	e	enum:__anon157
AS923_TX_EIRP_MAX_DBM	lorabase_as923.h	/^        AS923_TX_EIRP_MAX_DBM = 16      \/\/ 16 dBm$/;"	e	enum:__anon155
ASSERT	oslmic.h	61;"	d
ASSERT	oslmic.h	63;"	d
AU921_125kHz_UPFBASE	lorabase_au921.h	/^        AU921_125kHz_UPFBASE = 915200000,$/;"	e	enum:__anon35
AU921_125kHz_UPFSTEP	lorabase_au921.h	/^        AU921_125kHz_UPFSTEP = 200000,$/;"	e	enum:__anon35
AU921_500kHz_DNFBASE	lorabase_au921.h	/^        AU921_500kHz_DNFBASE = 923300000,$/;"	e	enum:__anon35
AU921_500kHz_DNFSTEP	lorabase_au921.h	/^        AU921_500kHz_DNFSTEP = 600000$/;"	e	enum:__anon35
AU921_500kHz_UPFBASE	lorabase_au921.h	/^        AU921_500kHz_UPFBASE = 915900000,$/;"	e	enum:__anon35
AU921_500kHz_UPFSTEP	lorabase_au921.h	/^        AU921_500kHz_UPFSTEP = 1600000,$/;"	e	enum:__anon35
AU921_DR_NONE	lorabase_au921.h	/^        AU921_DR_NONE,$/;"	e	enum:_dr_as921_t
AU921_DR_SF10	lorabase_au921.h	/^        AU921_DR_SF10,$/;"	e	enum:_dr_as921_t
AU921_DR_SF10CR	lorabase_au921.h	/^        AU921_DR_SF10CR,$/;"	e	enum:_dr_as921_t
AU921_DR_SF11	lorabase_au921.h	/^        AU921_DR_SF11,$/;"	e	enum:_dr_as921_t
AU921_DR_SF11CR	lorabase_au921.h	/^        AU921_DR_SF11CR,$/;"	e	enum:_dr_as921_t
AU921_DR_SF12	lorabase_au921.h	/^        AU921_DR_SF12 = 0,$/;"	e	enum:_dr_as921_t
AU921_DR_SF12CR	lorabase_au921.h	/^        AU921_DR_SF12CR = 8,$/;"	e	enum:_dr_as921_t
AU921_DR_SF7	lorabase_au921.h	/^        AU921_DR_SF7,$/;"	e	enum:_dr_as921_t
AU921_DR_SF7CR	lorabase_au921.h	/^        AU921_DR_SF7CR$/;"	e	enum:_dr_as921_t
AU921_DR_SF8	lorabase_au921.h	/^        AU921_DR_SF8,$/;"	e	enum:_dr_as921_t
AU921_DR_SF8C	lorabase_au921.h	/^        AU921_DR_SF8C,$/;"	e	enum:_dr_as921_t
AU921_DR_SF8CR	lorabase_au921.h	/^        AU921_DR_SF8CR,$/;"	e	enum:_dr_as921_t
AU921_DR_SF9	lorabase_au921.h	/^        AU921_DR_SF9,$/;"	e	enum:_dr_as921_t
AU921_DR_SF9CR	lorabase_au921.h	/^        AU921_DR_SF9CR,$/;"	e	enum:_dr_as921_t
AU921_FREQ_MAX	lorabase_au921.h	/^        AU921_FREQ_MAX = 928000000$/;"	e	enum:__anon36
AU921_FREQ_MIN	lorabase_au921.h	/^        AU921_FREQ_MIN = 915000000,$/;"	e	enum:__anon36
AU921_LMIC_REGION_EIRP	lorabase_au921.h	/^enum { AU921_LMIC_REGION_EIRP = 1 };         \/\/ region uses EIRP$/;"	e	enum:__anon39
AU921_TX_EIRP_MAX_DBM	lorabase_au921.h	/^        AU921_TX_EIRP_MAX_DBM = 30      \/\/ 30 dBm$/;"	e	enum:__anon37
BAND_AUX	lmic_eu_like.h	/^enum { BAND_MILLI = 0, BAND_CENTI = 1, BAND_DECI = 2, BAND_AUX = 3 };$/;"	e	enum:__anon1
BAND_CENTI	lmic_eu_like.h	/^enum { BAND_MILLI = 0, BAND_CENTI = 1, BAND_DECI = 2, BAND_AUX = 3 };$/;"	e	enum:__anon1
BAND_DECI	lmic_eu_like.h	/^enum { BAND_MILLI = 0, BAND_CENTI = 1, BAND_DECI = 2, BAND_AUX = 3 };$/;"	e	enum:__anon1
BAND_MILLI	lmic_eu_like.h	/^enum { BAND_MILLI = 0, BAND_CENTI = 1, BAND_DECI = 2, BAND_AUX = 3 };$/;"	e	enum:__anon1
BCN_FULL	lmic.h	/^       BCN_FULL    = 0x02,   \/\/!< Full beacon decoded$/;"	e	enum:__anon18
BCN_GUARD_ms	lorabase.h	/^enum { BCN_GUARD_ms      = 3000 };   \/\/ end of beacon period to prevent interference with beacon$/;"	e	enum:__anon64
BCN_GUARD_osticks	lmic_bandplan.h	161;"	d
BCN_GUARD_us	lorabase.h	/^enum { BCN_GUARD_us      = 3000000 };$/;"	e	enum:__anon68
BCN_INTV_exp	lorabase.h	/^enum { BCN_INTV_exp      = 7 };$/;"	e	enum:__anon59
BCN_INTV_ms	lorabase.h	/^enum { BCN_INTV_ms       = BCN_INTV_sec*1000L };$/;"	e	enum:__anon61
BCN_INTV_osticks	lmic_bandplan.h	154;"	d
BCN_INTV_sec	lorabase.h	/^enum { BCN_INTV_sec      = 1<<BCN_INTV_exp };$/;"	e	enum:__anon60
BCN_INTV_us	lorabase.h	/^enum { BCN_INTV_us       = BCN_INTV_ms*1000L };$/;"	e	enum:__anon62
BCN_NODDIFF	lmic.h	/^       BCN_NODDIFF = 0x08 }; \/\/!< No differential drift measured yet$/;"	e	enum:__anon18
BCN_NODRIFT	lmic.h	/^       BCN_NODRIFT = 0x04,   \/\/!< No drift value measured yet$/;"	e	enum:__anon18
BCN_NONE	lmic.h	/^enum { BCN_NONE    = 0x00,   \/\/!< No beacon received$/;"	e	enum:__anon18
BCN_PARTIAL	lmic.h	/^       BCN_PARTIAL = 0x01,   \/\/!< Only first (common) part could be decoded (info,lat,lon invalid\/previous)$/;"	e	enum:__anon18
BCN_RESERVE_ms	lorabase.h	/^enum { BCN_RESERVE_ms    = 2120 };   \/\/ space reserved for beacon and NWK management$/;"	e	enum:__anon63
BCN_RESERVE_osticks	lmic_bandplan.h	160;"	d
BCN_RESERVE_us	lorabase.h	/^enum { BCN_RESERVE_us    = 2120000 };$/;"	e	enum:__anon67
BCN_SLOT_SPAN_ms	lorabase.h	/^enum { BCN_SLOT_SPAN_ms  =   30 };   \/\/ 2^12 reception slots a this span$/;"	e	enum:__anon65
BCN_SLOT_SPAN_us	lorabase.h	/^enum { BCN_SLOT_SPAN_us  =   30000 };$/;"	e	enum:__anon69
BCN_WINDOW_ms	lorabase.h	/^enum { BCN_WINDOW_ms     = BCN_INTV_ms-(int)BCN_GUARD_ms-(int)BCN_RESERVE_ms };$/;"	e	enum:__anon66
BCN_WINDOW_osticks	lmic_bandplan.h	162;"	d
BW125	lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	e	enum:_bw_t
BW250	lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	e	enum:_bw_t
BW500	lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	e	enum:_bw_t
BWrfu	lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	e	enum:_bw_t
CFG_LMIC_EU_like	lmic_config_preconditions.h	151;"	d
CFG_LMIC_EU_like_MASK	lmic_config_preconditions.h	127;"	d
CFG_LMIC_REGION_MASK	lmic_config_preconditions.h	102;"	d
CFG_LMIC_US_like	lmic_config_preconditions.h	152;"	d
CFG_LMIC_US_like_MASK	lmic_config_preconditions.h	139;"	d
CFG_TEXT_1	lmic_config_preconditions.h	61;"	d
CFG_TEXT_2	lmic_config_preconditions.h	62;"	d
CFG_eu868	config.h	35;"	d
CFG_region	lmic_config_preconditions.h	115;"	d
CFG_sx1276_radio	config.h	53;"	d
CHNL_BCN	lorabase.h	/^enum { CHNL_BCN          = 0 }; \/\/ used only for default init of state (rotating beacon scheme)$/;"	e	enum:__anon88
CHNL_BCN	lorabase.h	/^enum { CHNL_BCN         = 0 }; \/\/ used only for default init of state (rotating beacon scheme)$/;"	e	enum:__anon99
CHNL_BCN	lorabase.h	/^enum { CHNL_BCN = 5 };$/;"	e	enum:__anon110
CHNL_BCN	lorabase.h	/^enum { CHNL_BCN = 5 };$/;"	e	enum:__anon122
CHNL_BCN	lorabase.h	/^enum { CHNL_BCN = 5 };$/;"	e	enum:__anon76
CONST_TABLE	oslmic.h	268;"	d
CONST_TABLE	oslmic.h	279;"	d
CR_4_5	lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	e	enum:_cr_t
CR_4_6	lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	e	enum:_cr_t
CR_4_7	lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	e	enum:_cr_t
CR_4_8	lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	e	enum:_cr_t
DECLARE_LMIC	oslmic.h	97;"	d
DECL_ON_LMIC_EVENT	oslmic.h	85;"	d
DEFINE_LMIC	oslmic.h	96;"	d
DELAY_DNW1	lorabase.h	/^enum { DELAY_DNW1        =  1 }; \/\/ in secs down window #1$/;"	e	enum:__anon56
DELAY_DNW2	lorabase.h	/^enum { DELAY_DNW2        =  DELAY_DNW1 +(int)DELAY_EXTDNW2 }; \/\/ in secs down window #1$/;"	e	enum:__anon58
DELAY_EXTDNW2	lorabase.h	/^enum { DELAY_EXTDNW2     =  1 }; \/\/ in secs$/;"	e	enum:__anon55
DELAY_EXTDNW2	lorabase.h	/^enum { DELAY_EXTDNW2     =  2 }; \/\/ in secs$/;"	e	enum:__anon53
DELAY_EXTDNW2_osticks	lmic_bandplan.h	159;"	d
DELAY_JACC1	lorabase.h	/^enum { DELAY_JACC1       =  5 }; \/\/ in secs$/;"	e	enum:__anon54
DELAY_JACC1	lorabase.h	/^enum { DELAY_JACC1       =  8 }; \/\/ in secs$/;"	e	enum:__anon52
DELAY_JACC1_osticks	lmic_bandplan.h	157;"	d
DELAY_JACC2	lorabase.h	/^enum { DELAY_JACC2       =  DELAY_JACC1+(int)DELAY_EXTDNW2 }; \/\/ in secs$/;"	e	enum:__anon57
DELAY_JACC2_osticks	lmic_bandplan.h	158;"	d
DISABLE_INVERT_IQ_ON_RX	config.h	134;"	d
DNW2_SAFETY_ZONE	lmic_eu_like.h	44;"	d
DNW2_SAFETY_ZONE	lmic_us_like.h	40;"	d
DO_DEVDB	oslmic.h	59;"	d
DRCHG_NOACK	lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon16
DRCHG_NOADRACK	lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon16
DRCHG_NOJACC	lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon16
DRCHG_NWKCMD	lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon16
DRCHG_SET	lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon16
DR_BCN	lorabase.h	/^enum { DR_BCN            = US915_DR_SF12CR };$/;"	e	enum:__anon89
DR_BCN	lorabase.h	/^enum { DR_BCN           = AU921_DR_SF10CR };$/;"	e	enum:__anon100
DR_BCN	lorabase.h	/^enum { DR_BCN = AS923_DR_SF9 };$/;"	e	enum:__anon112
DR_BCN	lorabase.h	/^enum { DR_BCN = EU868_DR_SF9 };$/;"	e	enum:__anon78
DR_BCN	lorabase.h	/^enum { DR_BCN = IN866_DR_SF8 };$/;"	e	enum:__anon124
DR_DFLTMIN	lorabase.h	/^enum { DR_DFLTMIN       = AU921_DR_SF7 };  \/\/ DR5$/;"	e	enum:__anon93
DR_DFLTMIN	lorabase.h	/^enum { DR_DFLTMIN = AS923_DR_SF10 };  \/\/ DR2$/;"	e	enum:__anon104
DR_DFLTMIN	lorabase.h	/^enum { DR_DFLTMIN = EU868_DR_SF7 };   \/\/ DR5$/;"	e	enum:__anon70
DR_DFLTMIN	lorabase.h	/^enum { DR_DFLTMIN = IN866_DR_SF7 };     \/\/ DR5$/;"	e	enum:__anon116
DR_DFLTMIN	lorabase.h	/^enum { DR_DFLTMIN = US915_DR_SF7 };  \/\/ DR5$/;"	e	enum:__anon82
DR_DNW2	lorabase.h	/^enum { DR_DNW2           = US915_DR_SF12CR };$/;"	e	enum:__anon87
DR_DNW2	lorabase.h	/^enum { DR_DNW2          = AU921_DR_SF12CR };                  \/\/ DR8$/;"	e	enum:__anon98
DR_DNW2	lorabase.h	/^enum { DR_DNW2 = AS923_DR_SF10 };$/;"	e	enum:__anon109
DR_DNW2	lorabase.h	/^enum { DR_DNW2 = EU868_DR_SF12 };$/;"	e	enum:__anon75
DR_DNW2	lorabase.h	/^enum { DR_DNW2 = IN866_DR_SF10 };$/;"	e	enum:__anon121
DR_FSK	lorabase.h	/^	DR_FSK  = EU868_DR_FSK,$/;"	e	enum:_dr_configured_t
DR_FSK	lorabase.h	/^        DR_FSK  = AS923_DR_FSK,$/;"	e	enum:_dr_configured_t
DR_FSK	lorabase.h	/^        DR_FSK  = IN866_DR_FSK,           \/\/ DR7$/;"	e	enum:_dr_configured_t
DR_NONE	lorabase.h	/^	DR_NONE = EU868_DR_NONE$/;"	e	enum:_dr_configured_t
DR_NONE	lorabase.h	/^        DR_NONE    = AU921_DR_NONE,$/;"	e	enum:_dr_configured_t
DR_NONE	lorabase.h	/^        DR_NONE   = US915_DR_NONE,$/;"	e	enum:_dr_configured_t
DR_NONE	lorabase.h	/^        DR_NONE = AS923_DR_NONE$/;"	e	enum:_dr_configured_t
DR_NONE	lorabase.h	/^        DR_NONE = IN866_DR_NONE$/;"	e	enum:_dr_configured_t
DR_PAGE	lorabase.h	/^enum { DR_PAGE          = DR_PAGE_AU921 };$/;"	e	enum:__anon94
DR_PAGE	lorabase.h	/^enum { DR_PAGE = DR_PAGE_AS923 };$/;"	e	enum:__anon105
DR_PAGE	lorabase.h	/^enum { DR_PAGE = DR_PAGE_EU868 };$/;"	e	enum:__anon71
DR_PAGE	lorabase.h	/^enum { DR_PAGE = DR_PAGE_IN866 };       \/\/ DR_PAGE is a debugging parameter$/;"	e	enum:__anon117
DR_PAGE	lorabase.h	/^enum { DR_PAGE = DR_PAGE_US915 };$/;"	e	enum:__anon83
DR_PAGE_AS923	lorabase_as923.h	/^enum { DR_PAGE_AS923 = 0x10 * (LMIC_REGION_as923 - 1) };$/;"	e	enum:__anon156
DR_PAGE_AU921	lorabase_au921.h	/^enum { DR_PAGE_AU921 = 0x10 * (LMIC_REGION_au921 - 1) };$/;"	e	enum:__anon38
DR_PAGE_EU868	lorabase_eu868.h	/^enum { DR_PAGE_EU868 = 0x10 * (LMIC_REGION_eu868 - 1) };$/;"	e	enum:__anon34
DR_PAGE_IN866	lorabase_in866.h	/^enum { DR_PAGE_IN866 = 0x10 * (LMIC_REGION_in866 - 1) };$/;"	e	enum:__anon27
DR_PAGE_US915	lorabase_us915.h	/^enum { DR_PAGE_US915 = 0x10 * (LMIC_REGION_us915 - 1) };$/;"	e	enum:__anon43
DR_PING	lorabase.h	/^enum { DR_PING           = US915_DR_SF10CR };       \/\/ default ping DR$/;"	e	enum:__anon85
DR_PING	lorabase.h	/^enum { DR_PING          = AU921_DR_SF10CR };       \/\/ default ping DR$/;"	e	enum:__anon96
DR_PING	lorabase.h	/^enum { DR_PING = AS923_DR_SF9 };       \/\/ default ping DR: DR3$/;"	e	enum:__anon107
DR_PING	lorabase.h	/^enum { DR_PING = EU868_DR_SF9 };       \/\/ default ping DR$/;"	e	enum:__anon73
DR_PING	lorabase.h	/^enum { DR_PING = IN866_DR_SF8 };        \/\/ default ping DR$/;"	e	enum:__anon119
DR_RANGE_MAP	lmic.h	327;"	d
DR_SF10	lorabase.h	/^	DR_SF10 = EU868_DR_SF10,$/;"	e	enum:_dr_configured_t
DR_SF10	lorabase.h	/^        DR_SF10    = AU921_DR_SF10,$/;"	e	enum:_dr_configured_t
DR_SF10	lorabase.h	/^        DR_SF10   = US915_DR_SF10,$/;"	e	enum:_dr_configured_t
DR_SF10	lorabase.h	/^        DR_SF10 = AS923_DR_SF10,$/;"	e	enum:_dr_configured_t
DR_SF10	lorabase.h	/^        DR_SF10 = IN866_DR_SF10,          \/\/ DR2$/;"	e	enum:_dr_configured_t
DR_SF10CR	lorabase.h	/^        DR_SF10CR  = AU921_DR_SF10CR,$/;"	e	enum:_dr_configured_t
DR_SF10CR	lorabase.h	/^        DR_SF10CR = US915_DR_SF10CR,$/;"	e	enum:_dr_configured_t
DR_SF11	lorabase.h	/^	DR_SF11 = EU868_DR_SF11,$/;"	e	enum:_dr_configured_t
DR_SF11	lorabase.h	/^        DR_SF11    = AU921_DR_SF11,$/;"	e	enum:_dr_configured_t
DR_SF11	lorabase.h	/^        DR_SF11 = AS923_DR_SF11,$/;"	e	enum:_dr_configured_t
DR_SF11	lorabase.h	/^        DR_SF11 = IN866_DR_SF11,          \/\/ DR1$/;"	e	enum:_dr_configured_t
DR_SF11CR	lorabase.h	/^        DR_SF11CR  = AU921_DR_SF11CR,$/;"	e	enum:_dr_configured_t
DR_SF11CR	lorabase.h	/^        DR_SF11CR = US915_DR_SF11CR,$/;"	e	enum:_dr_configured_t
DR_SF12	lorabase.h	/^	DR_SF12 = EU868_DR_SF12,$/;"	e	enum:_dr_configured_t
DR_SF12	lorabase.h	/^        DR_SF12    = AU921_DR_SF12,$/;"	e	enum:_dr_configured_t
DR_SF12	lorabase.h	/^        DR_SF12 = AS923_DR_SF12,$/;"	e	enum:_dr_configured_t
DR_SF12	lorabase.h	/^        DR_SF12 = IN866_DR_SF12,          \/\/ DR0$/;"	e	enum:_dr_configured_t
DR_SF12CR	lorabase.h	/^        DR_SF12CR  = AU921_DR_SF12CR,$/;"	e	enum:_dr_configured_t
DR_SF12CR	lorabase.h	/^        DR_SF12CR = US915_DR_SF12CR,$/;"	e	enum:_dr_configured_t
DR_SF7	lorabase.h	/^	DR_SF7  = EU868_DR_SF7,$/;"	e	enum:_dr_configured_t
DR_SF7	lorabase.h	/^        DR_SF7     = AU921_DR_SF7,$/;"	e	enum:_dr_configured_t
DR_SF7	lorabase.h	/^        DR_SF7    = US915_DR_SF7,$/;"	e	enum:_dr_configured_t
DR_SF7	lorabase.h	/^        DR_SF7  = AS923_DR_SF7,$/;"	e	enum:_dr_configured_t
DR_SF7	lorabase.h	/^        DR_SF7  = IN866_DR_SF7,           \/\/ DR5$/;"	e	enum:_dr_configured_t
DR_SF7B	lorabase.h	/^	DR_SF7B = EU868_DR_SF7B,$/;"	e	enum:_dr_configured_t
DR_SF7B	lorabase.h	/^        DR_SF7B = AS923_DR_SF7B,$/;"	e	enum:_dr_configured_t
DR_SF7CR	lorabase.h	/^        DR_SF7CR   = AU921_DR_SF7CR$/;"	e	enum:_dr_configured_t
DR_SF7CR	lorabase.h	/^        DR_SF7CR  = US915_DR_SF7CR$/;"	e	enum:_dr_configured_t
DR_SF8	lorabase.h	/^	DR_SF8  = EU868_DR_SF8,$/;"	e	enum:_dr_configured_t
DR_SF8	lorabase.h	/^        DR_SF8     = AU921_DR_SF8,$/;"	e	enum:_dr_configured_t
DR_SF8	lorabase.h	/^        DR_SF8    = US915_DR_SF8,$/;"	e	enum:_dr_configured_t
DR_SF8	lorabase.h	/^        DR_SF8  = AS923_DR_SF8,$/;"	e	enum:_dr_configured_t
DR_SF8	lorabase.h	/^        DR_SF8  = IN866_DR_SF8,           \/\/ DR4$/;"	e	enum:_dr_configured_t
DR_SF8C	lorabase.h	/^        DR_SF8C    = AU921_DR_SF8C,$/;"	e	enum:_dr_configured_t
DR_SF8C	lorabase.h	/^        DR_SF8C   = US915_DR_SF8C,$/;"	e	enum:_dr_configured_t
DR_SF8CR	lorabase.h	/^        DR_SF8CR   = AU921_DR_SF8CR,$/;"	e	enum:_dr_configured_t
DR_SF8CR	lorabase.h	/^        DR_SF8CR  = US915_DR_SF8CR,$/;"	e	enum:_dr_configured_t
DR_SF9	lorabase.h	/^	DR_SF9  = EU868_DR_SF9,$/;"	e	enum:_dr_configured_t
DR_SF9	lorabase.h	/^        DR_SF9     = AU921_DR_SF9,$/;"	e	enum:_dr_configured_t
DR_SF9	lorabase.h	/^        DR_SF9    = US915_DR_SF9,$/;"	e	enum:_dr_configured_t
DR_SF9	lorabase.h	/^        DR_SF9  = AS923_DR_SF9,$/;"	e	enum:_dr_configured_t
DR_SF9	lorabase.h	/^        DR_SF9  = IN866_DR_SF9,           \/\/ DR3$/;"	e	enum:_dr_configured_t
DR_SF9CR	lorabase.h	/^        DR_SF9CR   = AU921_DR_SF9CR,$/;"	e	enum:_dr_configured_t
DR_SF9CR	lorabase.h	/^        DR_SF9CR  = US915_DR_SF9CR,$/;"	e	enum:_dr_configured_t
ENABLED_CHANNEL	lmic_us_like.h	44;"	d
EU868_DR_FSK	lorabase_eu868.h	/^        EU868_DR_FSK,$/;"	e	enum:_dr_eu868_t
EU868_DR_NONE	lorabase_eu868.h	/^        EU868_DR_NONE$/;"	e	enum:_dr_eu868_t
EU868_DR_SF10	lorabase_eu868.h	/^        EU868_DR_SF10,$/;"	e	enum:_dr_eu868_t
EU868_DR_SF11	lorabase_eu868.h	/^        EU868_DR_SF11,$/;"	e	enum:_dr_eu868_t
EU868_DR_SF12	lorabase_eu868.h	/^        EU868_DR_SF12 = 0,$/;"	e	enum:_dr_eu868_t
EU868_DR_SF7	lorabase_eu868.h	/^        EU868_DR_SF7,$/;"	e	enum:_dr_eu868_t
EU868_DR_SF7B	lorabase_eu868.h	/^        EU868_DR_SF7B,$/;"	e	enum:_dr_eu868_t
EU868_DR_SF8	lorabase_eu868.h	/^        EU868_DR_SF8,$/;"	e	enum:_dr_eu868_t
EU868_DR_SF9	lorabase_eu868.h	/^        EU868_DR_SF9,$/;"	e	enum:_dr_eu868_t
EU868_F1	lorabase_eu868.h	/^        EU868_F1 = 868100000,      \/\/ g1   SF7-12$/;"	e	enum:__anon30
EU868_F2	lorabase_eu868.h	/^        EU868_F2 = 868300000,      \/\/ g1   SF7-12 FSK SF7\/250$/;"	e	enum:__anon30
EU868_F3	lorabase_eu868.h	/^        EU868_F3 = 868500000,      \/\/ g1   SF7-12$/;"	e	enum:__anon30
EU868_F4	lorabase_eu868.h	/^        EU868_F4 = 868850000,      \/\/ g2   SF7-12$/;"	e	enum:__anon30
EU868_F5	lorabase_eu868.h	/^        EU868_F5 = 869050000,      \/\/ g2   SF7-12$/;"	e	enum:__anon30
EU868_F6	lorabase_eu868.h	/^        EU868_F6 = 869525000,      \/\/ g3   SF7-12$/;"	e	enum:__anon30
EU868_FREQ_MAX	lorabase_eu868.h	/^        EU868_FREQ_MAX = 870000000$/;"	e	enum:__anon31
EU868_FREQ_MIN	lorabase_eu868.h	/^        EU868_FREQ_MIN = 863000000,$/;"	e	enum:__anon31
EU868_J4	lorabase_eu868.h	/^        EU868_J4 = 864100000,      \/\/ g2   SF7-12  used during join$/;"	e	enum:__anon30
EU868_J5	lorabase_eu868.h	/^        EU868_J5 = 864300000,      \/\/ g2   SF7-12   ditto$/;"	e	enum:__anon30
EU868_J6	lorabase_eu868.h	/^        EU868_J6 = 864500000,      \/\/ g2   SF7-12   ditto$/;"	e	enum:__anon30
EU868_LMIC_REGION_EIRP	lorabase_eu868.h	/^enum { EU868_LMIC_REGION_EIRP = 1 };         \/\/ region uses EIRP$/;"	e	enum:__anon33
EU868_MCMD_LADR_11dBm	lorabase.h	/^    EU868_MCMD_LADR_11dBm     = 2,$/;"	e	enum:__anon148
EU868_MCMD_LADR_14dBm	lorabase.h	/^    EU868_MCMD_LADR_14dBm     = 1,$/;"	e	enum:__anon148
EU868_MCMD_LADR_20dBm	lorabase.h	/^    EU868_MCMD_LADR_20dBm     = 0,$/;"	e	enum:__anon148
EU868_MCMD_LADR_2dBm	lorabase.h	/^    EU868_MCMD_LADR_2dBm      = 5,$/;"	e	enum:__anon148
EU868_MCMD_LADR_5dBm	lorabase.h	/^    EU868_MCMD_LADR_5dBm      = 4,$/;"	e	enum:__anon148
EU868_MCMD_LADR_8dBm	lorabase.h	/^    EU868_MCMD_LADR_8dBm      = 3,$/;"	e	enum:__anon148
EU868_MCMD_LADR_FSK	lorabase.h	/^    EU868_MCMD_LADR_FSK       = EU868_DR_FSK <<4,$/;"	e	enum:__anon148
EU868_MCMD_LADR_SF10	lorabase.h	/^    EU868_MCMD_LADR_SF10      = EU868_DR_SF10<<4,$/;"	e	enum:__anon148
EU868_MCMD_LADR_SF11	lorabase.h	/^    EU868_MCMD_LADR_SF11      = EU868_DR_SF11<<4,$/;"	e	enum:__anon148
EU868_MCMD_LADR_SF12	lorabase.h	/^    EU868_MCMD_LADR_SF12      = EU868_DR_SF12<<4,$/;"	e	enum:__anon148
EU868_MCMD_LADR_SF7	lorabase.h	/^    EU868_MCMD_LADR_SF7       = EU868_DR_SF7 <<4,$/;"	e	enum:__anon148
EU868_MCMD_LADR_SF7B	lorabase.h	/^    EU868_MCMD_LADR_SF7B      = EU868_DR_SF7B<<4,$/;"	e	enum:__anon148
EU868_MCMD_LADR_SF8	lorabase.h	/^    EU868_MCMD_LADR_SF8       = EU868_DR_SF8 <<4,$/;"	e	enum:__anon148
EU868_MCMD_LADR_SF9	lorabase.h	/^    EU868_MCMD_LADR_SF9       = EU868_DR_SF9 <<4,$/;"	e	enum:__anon148
EU868_TX_EIRP_MAX_DBM	lorabase_eu868.h	/^        EU868_TX_EIRP_MAX_DBM = 16      \/\/ 16 dBm EIRP. So subtract 3 dBm for a 3 dBi antenna.$/;"	e	enum:__anon32
EV	oslmic.h	58;"	d
EV_BEACON_FOUND	lmic.h	/^enum _ev_t { EV_SCAN_TIMEOUT=1, EV_BEACON_FOUND,$/;"	e	enum:_ev_t
EV_BEACON_MISSED	lmic.h	/^             EV_BEACON_MISSED, EV_BEACON_TRACKED, EV_JOINING,$/;"	e	enum:_ev_t
EV_BEACON_TRACKED	lmic.h	/^             EV_BEACON_MISSED, EV_BEACON_TRACKED, EV_JOINING,$/;"	e	enum:_ev_t
EV_JOINED	lmic.h	/^             EV_JOINED, EV_RFU1, EV_JOIN_FAILED, EV_REJOIN_FAILED,$/;"	e	enum:_ev_t
EV_JOINING	lmic.h	/^             EV_BEACON_MISSED, EV_BEACON_TRACKED, EV_JOINING,$/;"	e	enum:_ev_t
EV_JOIN_FAILED	lmic.h	/^             EV_JOINED, EV_RFU1, EV_JOIN_FAILED, EV_REJOIN_FAILED,$/;"	e	enum:_ev_t
EV_LINK_ALIVE	lmic.h	/^             EV_RXCOMPLETE, EV_LINK_DEAD, EV_LINK_ALIVE, EV_SCAN_FOUND,$/;"	e	enum:_ev_t
EV_LINK_DEAD	lmic.h	/^             EV_RXCOMPLETE, EV_LINK_DEAD, EV_LINK_ALIVE, EV_SCAN_FOUND,$/;"	e	enum:_ev_t
EV_LOST_TSYNC	lmic.h	/^             EV_TXCOMPLETE, EV_LOST_TSYNC, EV_RESET,$/;"	e	enum:_ev_t
EV_REJOIN_FAILED	lmic.h	/^             EV_JOINED, EV_RFU1, EV_JOIN_FAILED, EV_REJOIN_FAILED,$/;"	e	enum:_ev_t
EV_RESET	lmic.h	/^             EV_TXCOMPLETE, EV_LOST_TSYNC, EV_RESET,$/;"	e	enum:_ev_t
EV_RFU1	lmic.h	/^             EV_JOINED, EV_RFU1, EV_JOIN_FAILED, EV_REJOIN_FAILED,$/;"	e	enum:_ev_t
EV_RXCOMPLETE	lmic.h	/^             EV_RXCOMPLETE, EV_LINK_DEAD, EV_LINK_ALIVE, EV_SCAN_FOUND,$/;"	e	enum:_ev_t
EV_SCAN_FOUND	lmic.h	/^             EV_RXCOMPLETE, EV_LINK_DEAD, EV_LINK_ALIVE, EV_SCAN_FOUND,$/;"	e	enum:_ev_t
EV_SCAN_TIMEOUT	lmic.h	/^enum _ev_t { EV_SCAN_TIMEOUT=1, EV_BEACON_FOUND,$/;"	e	enum:_ev_t
EV_TXCOMPLETE	lmic.h	/^             EV_TXCOMPLETE, EV_LOST_TSYNC, EV_RESET,$/;"	e	enum:_ev_t
EV_TXSTART	lmic.h	/^             EV_TXSTART };$/;"	e	enum:_ev_t
FCT_ACK	lorabase.h	/^    FCT_ACK    = 0x20,$/;"	e	enum:__anon136
FCT_ADRARQ	lorabase.h	/^    FCT_ADRARQ = 0x40,$/;"	e	enum:__anon136
FCT_ADREN	lorabase.h	/^    FCT_ADREN  = 0x80,$/;"	e	enum:__anon136
FCT_CLASSB	lorabase.h	/^    FCT_CLASSB = FCT_MORE$/;"	e	enum:__anon137
FCT_MORE	lorabase.h	/^    FCT_MORE   = 0x10,   \/\/ also in DN direction: Class B indicator$/;"	e	enum:__anon136
FCT_OPTLEN	lorabase.h	/^    FCT_OPTLEN = 0x0F,$/;"	e	enum:__anon136
FOR_LG01_GW	config.h	16;"	d
FREQ_BCN	lorabase.h	/^enum { FREQ_BCN = AS923_FBCN };$/;"	e	enum:__anon111
FREQ_BCN	lorabase.h	/^enum { FREQ_BCN = EU868_F6 };$/;"	e	enum:__anon77
FREQ_BCN	lorabase.h	/^enum { FREQ_BCN = IN866_FB };$/;"	e	enum:__anon123
FREQ_DNW2	lorabase.h	/^enum { FREQ_DNW2         = US915_500kHz_DNFBASE + 0*US915_500kHz_DNFSTEP };$/;"	e	enum:__anon86
FREQ_DNW2	lorabase.h	/^enum { FREQ_DNW2        = AU921_500kHz_DNFBASE + 0*AU921_500kHz_DNFSTEP };$/;"	e	enum:__anon97
FREQ_DNW2	lorabase.h	/^enum { FREQ_DNW2 = AS923_FDOWN };$/;"	e	enum:__anon108
FREQ_DNW2	lorabase.h	/^enum { FREQ_DNW2 = EU868_F6 };$/;"	e	enum:__anon74
FREQ_DNW2	lorabase.h	/^enum { FREQ_DNW2 = IN866_FB };$/;"	e	enum:__anon120
FREQ_PING	lorabase.h	/^enum { FREQ_PING         = US915_500kHz_DNFBASE + 0*US915_500kHz_DNFSTEP };  \/\/ default ping freq$/;"	e	enum:__anon84
FREQ_PING	lorabase.h	/^enum { FREQ_PING        = AU921_500kHz_DNFBASE + 0*AU921_500kHz_DNFSTEP };  \/\/ default ping freq$/;"	e	enum:__anon95
FREQ_PING	lorabase.h	/^enum { FREQ_PING = AS923_F2 };         \/\/ default ping freq$/;"	e	enum:__anon106
FREQ_PING	lorabase.h	/^enum { FREQ_PING = EU868_F6 };  \/\/ default ping freq$/;"	e	enum:__anon72
FREQ_PING	lorabase.h	/^enum { FREQ_PING = IN866_FB };          \/\/ default ping freq$/;"	e	enum:__anon118
FSK	lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
FSKRegAfcBw	radio.c	59;"	d	file:
FSKRegAfcFei	radio.c	70;"	d	file:
FSKRegAfcLsb	radio.c	74;"	d	file:
FSKRegAfcMsb	radio.c	72;"	d	file:
FSKRegBitrateLsb	radio.c	37;"	d	file:
FSKRegBitrateMsb	radio.c	36;"	d	file:
FSKRegBroadcastAdrs	radio.c	115;"	d	file:
FSKRegFdevLsb	radio.c	39;"	d	file:
FSKRegFdevMsb	radio.c	38;"	d	file:
FSKRegFeiLsb	radio.c	78;"	d	file:
FSKRegFeiMsb	radio.c	76;"	d	file:
FSKRegFifoThresh	radio.c	116;"	d	file:
FSKRegImageCal	radio.c	124;"	d	file:
FSKRegIrqFlags1	radio.c	127;"	d	file:
FSKRegIrqFlags2	radio.c	128;"	d	file:
FSKRegLowBat	radio.c	126;"	d	file:
FSKRegNodeAdrs	radio.c	113;"	d	file:
FSKRegOokAvg	radio.c	65;"	d	file:
FSKRegOokFix	radio.c	63;"	d	file:
FSKRegOokPeak	radio.c	61;"	d	file:
FSKRegOsc	radio.c	90;"	d	file:
FSKRegPacketConfig1	radio.c	109;"	d	file:
FSKRegPacketConfig2	radio.c	110;"	d	file:
FSKRegPayloadLength	radio.c	112;"	d	file:
FSKRegPreambleDetect	radio.c	80;"	d	file:
FSKRegPreambleLsb	radio.c	95;"	d	file:
FSKRegPreambleMsb	radio.c	92;"	d	file:
FSKRegRssiCollision	radio.c	51;"	d	file:
FSKRegRssiConfig	radio.c	49;"	d	file:
FSKRegRssiThresh	radio.c	53;"	d	file:
FSKRegRssiValue	radio.c	55;"	d	file:
FSKRegRxBw	radio.c	57;"	d	file:
FSKRegRxConfig	radio.c	47;"	d	file:
FSKRegRxDelay	radio.c	88;"	d	file:
FSKRegRxTimeout1	radio.c	82;"	d	file:
FSKRegRxTimeout2	radio.c	84;"	d	file:
FSKRegRxTimeout3	radio.c	86;"	d	file:
FSKRegSeqConfig1	radio.c	117;"	d	file:
FSKRegSeqConfig2	radio.c	118;"	d	file:
FSKRegSyncConfig	radio.c	96;"	d	file:
FSKRegSyncValue1	radio.c	98;"	d	file:
FSKRegSyncValue2	radio.c	100;"	d	file:
FSKRegSyncValue3	radio.c	102;"	d	file:
FSKRegSyncValue4	radio.c	103;"	d	file:
FSKRegSyncValue5	radio.c	105;"	d	file:
FSKRegSyncValue6	radio.c	106;"	d	file:
FSKRegSyncValue7	radio.c	107;"	d	file:
FSKRegSyncValue8	radio.c	108;"	d	file:
FSKRegTemp	radio.c	125;"	d	file:
FSKRegTimer1Coef	radio.c	121;"	d	file:
FSKRegTimer2Coef	radio.c	123;"	d	file:
FSKRegTimerResol	radio.c	120;"	d	file:
FUNC_ADDR	oslmic.h	91;"	d
HDR_FTYPE	lorabase.h	/^    HDR_FTYPE   = 0xE0,$/;"	e	enum:__anon132
HDR_FTYPE_DADN	lorabase.h	/^    HDR_FTYPE_DADN   = 0x60,  \/\/ data (unconfirmed) dn$/;"	e	enum:__anon134
HDR_FTYPE_DAUP	lorabase.h	/^    HDR_FTYPE_DAUP   = 0x40,  \/\/ data (unconfirmed) up$/;"	e	enum:__anon134
HDR_FTYPE_DCDN	lorabase.h	/^    HDR_FTYPE_DCDN   = 0xA0,  \/\/ data confirmed dn$/;"	e	enum:__anon134
HDR_FTYPE_DCUP	lorabase.h	/^    HDR_FTYPE_DCUP   = 0x80,  \/\/ data confirmed up$/;"	e	enum:__anon134
HDR_FTYPE_DNFLAG	lorabase.h	/^enum { HDR_FTYPE_DNFLAG = 0x20 };  \/\/ flags DN frame except for HDR_FTYPE_PROP$/;"	e	enum:__anon133
HDR_FTYPE_JACC	lorabase.h	/^    HDR_FTYPE_JACC   = 0x20,$/;"	e	enum:__anon134
HDR_FTYPE_JREQ	lorabase.h	/^    HDR_FTYPE_JREQ   = 0x00,$/;"	e	enum:__anon134
HDR_FTYPE_PROP	lorabase.h	/^    HDR_FTYPE_PROP   = 0xE0$/;"	e	enum:__anon134
HDR_FTYPE_REJOIN	lorabase.h	/^    HDR_FTYPE_REJOIN = 0xC0,  \/\/ rejoin for roaming$/;"	e	enum:__anon134
HDR_MAJOR	lorabase.h	/^    HDR_MAJOR   = 0x03$/;"	e	enum:__anon132
HDR_MAJOR_V1	lorabase.h	/^    HDR_MAJOR_V1 = 0x00,$/;"	e	enum:__anon135
HDR_RFU	lorabase.h	/^    HDR_RFU     = 0x1C,$/;"	e	enum:__anon132
ILLEGAL_RPS	lorabase.h	/^enum { ILLEGAL_RPS = 0xFF };$/;"	e	enum:__anon46
IN866_DR_FSK	lorabase_in866.h	/^        IN866_DR_FSK,           \/\/ DR7$/;"	e	enum:_dr_in866_t
IN866_DR_NONE	lorabase_in866.h	/^        IN866_DR_NONE$/;"	e	enum:_dr_in866_t
IN866_DR_RFU	lorabase_in866.h	/^        IN866_DR_RFU,           \/\/ -$/;"	e	enum:_dr_in866_t
IN866_DR_SF10	lorabase_in866.h	/^        IN866_DR_SF10,          \/\/ DR2$/;"	e	enum:_dr_in866_t
IN866_DR_SF11	lorabase_in866.h	/^        IN866_DR_SF11,          \/\/ DR1$/;"	e	enum:_dr_in866_t
IN866_DR_SF12	lorabase_in866.h	/^        IN866_DR_SF12 = 0,      \/\/ DR0$/;"	e	enum:_dr_in866_t
IN866_DR_SF7	lorabase_in866.h	/^        IN866_DR_SF7,           \/\/ DR5$/;"	e	enum:_dr_in866_t
IN866_DR_SF8	lorabase_in866.h	/^        IN866_DR_SF8,           \/\/ DR4$/;"	e	enum:_dr_in866_t
IN866_DR_SF9	lorabase_in866.h	/^        IN866_DR_SF9,           \/\/ DR3$/;"	e	enum:_dr_in866_t
IN866_F1	lorabase_in866.h	/^        IN866_F1 = 865062500,      \/\/   SF7-12 (DR0-5)$/;"	e	enum:__anon24
IN866_F2	lorabase_in866.h	/^        IN866_F2 = 865402500,      \/\/   SF7-12 (DR0-5)$/;"	e	enum:__anon24
IN866_F3	lorabase_in866.h	/^        IN866_F3 = 865985000,      \/\/   SF7-12 (DR0-5)$/;"	e	enum:__anon24
IN866_FB	lorabase_in866.h	/^        IN866_FB = 866550000,      \/\/   beacon\/ping$/;"	e	enum:__anon24
IN866_FREQ_MAX	lorabase_in866.h	/^        IN866_FREQ_MAX = 867000000$/;"	e	enum:__anon25
IN866_FREQ_MIN	lorabase_in866.h	/^        IN866_FREQ_MIN = 865000000,$/;"	e	enum:__anon25
IN866_LMIC_REGION_EIRP	lorabase_in866.h	/^enum { IN866_LMIC_REGION_EIRP = 1 };         \/\/ region uses EIRP$/;"	e	enum:__anon28
IN866_TX_EIRP_MAX_DBM	lorabase_in866.h	/^        IN866_TX_EIRP_MAX_DBM = 30      \/\/ 30 dBm$/;"	e	enum:__anon26
IRQ_FSK1_MODEREADY_MASK	radio.c	224;"	d	file:
IRQ_FSK1_PLLLOCK_MASK	radio.c	227;"	d	file:
IRQ_FSK1_PREAMBLEDETECT_MASK	radio.c	230;"	d	file:
IRQ_FSK1_RSSI_MASK	radio.c	228;"	d	file:
IRQ_FSK1_RXREADY_MASK	radio.c	225;"	d	file:
IRQ_FSK1_SYNCADDRESSMATCH_MASK	radio.c	231;"	d	file:
IRQ_FSK1_TIMEOUT_MASK	radio.c	229;"	d	file:
IRQ_FSK1_TXREADY_MASK	radio.c	226;"	d	file:
IRQ_FSK2_CRCOK_MASK	radio.c	238;"	d	file:
IRQ_FSK2_FIFOEMPTY_MASK	radio.c	233;"	d	file:
IRQ_FSK2_FIFOFULL_MASK	radio.c	232;"	d	file:
IRQ_FSK2_FIFOLEVEL_MASK	radio.c	234;"	d	file:
IRQ_FSK2_FIFOOVERRUN_MASK	radio.c	235;"	d	file:
IRQ_FSK2_LOWBAT_MASK	radio.c	239;"	d	file:
IRQ_FSK2_PACKETSENT_MASK	radio.c	236;"	d	file:
IRQ_FSK2_PAYLOADREADY_MASK	radio.c	237;"	d	file:
IRQ_LORA_CDDETD_MASK	radio.c	222;"	d	file:
IRQ_LORA_CDDONE_MASK	radio.c	220;"	d	file:
IRQ_LORA_CRCERR_MASK	radio.c	217;"	d	file:
IRQ_LORA_FHSSCH_MASK	radio.c	221;"	d	file:
IRQ_LORA_HEADER_MASK	radio.c	218;"	d	file:
IRQ_LORA_RXDONE_MASK	radio.c	216;"	d	file:
IRQ_LORA_RXTOUT_MASK	radio.c	215;"	d	file:
IRQ_LORA_TXDONE_MASK	radio.c	219;"	d	file:
IS_CHANNEL_125khz	lmic_us_like.h	42;"	d
IS_CHANNEL_500khz	lmic_us_like.h	43;"	d
JOIN_GUARD_ms	lmic.h	/^enum { JOIN_GUARD_ms      =  9000 };  \/\/ msecs - don't start Join Req\/Acc transaction before beacon$/;"	e	enum:__anon9
JOIN_GUARD_osticks	lmic_bandplan.h	156;"	d
KEEP_TXPOW	lmic.h	/^enum { KEEP_TXPOW = -128 };$/;"	e	enum:__anon17
LENOF_TABLE	oslmic.h	232;"	d
LEN_ARTNONCE	lorabase.h	/^enum { LEN_ARTNONCE      =  3 };$/;"	e	enum:__anon50
LEN_BCN	lorabase.h	/^        LEN_BCN = 17$/;"	e	enum:__anon115
LEN_BCN	lorabase.h	/^        LEN_BCN = 17$/;"	e	enum:__anon81
LEN_BCN	lorabase.h	/^        LEN_BCN = 19$/;"	e	enum:__anon103
LEN_BCN	lorabase.h	/^        LEN_BCN = 19$/;"	e	enum:__anon127
LEN_BCN	lorabase.h	/^    LEN_BCN          = 19$/;"	e	enum:__anon92
LEN_DEVNONCE	lorabase.h	/^enum { LEN_DEVNONCE      =  2 };$/;"	e	enum:__anon49
LEN_JA	lorabase.h	/^    LEN_JA          = 17,$/;"	e	enum:__anon129
LEN_JAEXT	lorabase.h	/^    LEN_JAEXT       = 17+16$/;"	e	enum:__anon129
LEN_JR	lorabase.h	/^    LEN_JR          = 23$/;"	e	enum:__anon128
LEN_NETID	lorabase.h	/^enum { LEN_NETID         =  3 };$/;"	e	enum:__anon51
LIMIT_CHANNELS	lmic.h	/^enum { LIMIT_CHANNELS = (1<<4) };   \/\/ EU868 will never have more channels$/;"	e	enum:__anon14
LINK_CHECK_CONT	lmic.h	/^enum { LINK_CHECK_CONT    =  12 ,    \/\/ continue with this after reported dead link$/;"	e	enum:__anon6
LINK_CHECK_DEAD	lmic.h	/^       LINK_CHECK_DEAD    =  24 ,    \/\/ after this UP frames and no response from NWK assume link is dead$/;"	e	enum:__anon6
LINK_CHECK_INIT	lmic.h	/^       LINK_CHECK_INIT    = -12 ,    \/\/ UP frame count until we inc datarate$/;"	e	enum:__anon6
LINK_CHECK_OFF	lmic.h	/^       LINK_CHECK_OFF     =-128 };   \/\/ link check disabled$/;"	e	enum:__anon6
LMIC_DEBUG_FLUSH	lmic.h	58;"	d
LMIC_DEBUG_FLUSH	lmic.h	61;"	d
LMIC_DEBUG_FLUSH	lmic.h	67;"	d
LMIC_DEBUG_LEVEL	config.h	85;"	d
LMIC_DEBUG_PRINTF	lmic.h	49;"	d
LMIC_DEBUG_PRINTF	lmic.h	53;"	d
LMIC_DEBUG_PRINTF	lmic.h	66;"	d
LMIC_DR_LEGACY	config.h	169;"	d
LMIC_DR_LEGACY	config.h	171;"	d
LMIC_DR_LEGACY	lmic.c	29;"	d	file:
LMIC_DR_LEGACY	lmic_as923.c	29;"	d	file:
LMIC_DR_LEGACY	lmic_au921.c	29;"	d	file:
LMIC_DR_LEGACY	lmic_eu868.c	29;"	d	file:
LMIC_DR_LEGACY	lmic_eu_like.c	29;"	d	file:
LMIC_DR_LEGACY	lmic_in866.c	29;"	d	file:
LMIC_DR_LEGACY	lmic_us915.c	29;"	d	file:
LMIC_DR_LEGACY	lmic_us_like.c	29;"	d	file:
LMIC_DR_LEGACY	oslmic.c	28;"	d	file:
LMIC_DR_LEGACY	radio.c	28;"	d	file:
LMIC_ENABLE_TxParamSetupReq	lorabase.h	132;"	d
LMIC_ENABLE_TxParamSetupReq	lorabase.h	182;"	d
LMIC_ENABLE_TxParamSetupReq	lorabase.h	236;"	d
LMIC_ENABLE_TxParamSetupReq	lorabase.h	291;"	d
LMIC_ENABLE_TxParamSetupReq	lorabase.h	338;"	d
LMIC_FAILURE_TO	config.h	104;"	d
LMIC_PRINTF_TO	config.h	91;"	d
LMIC_REGIONS_SUPPORTED	lmic_config_preconditions.h	84;"	d
LMIC_REGION_EIRP	lorabase.h	/^enum { LMIC_REGION_EIRP = AS923_LMIC_REGION_EIRP };         \/\/ region uses EIRP$/;"	e	enum:__anon114
LMIC_REGION_EIRP	lorabase.h	/^enum { LMIC_REGION_EIRP = AU921_LMIC_REGION_EIRP };         \/\/ region uses EIRP$/;"	e	enum:__anon102
LMIC_REGION_EIRP	lorabase.h	/^enum { LMIC_REGION_EIRP = EU868_LMIC_REGION_EIRP };         \/\/ region uses EIRP$/;"	e	enum:__anon80
LMIC_REGION_EIRP	lorabase.h	/^enum { LMIC_REGION_EIRP = IN866_LMIC_REGION_EIRP };         \/\/ region uses EIRP$/;"	e	enum:__anon126
LMIC_REGION_EIRP	lorabase.h	/^enum { LMIC_REGION_EIRP = US915_LMIC_REGION_EIRP };         \/\/ region uses EIRP$/;"	e	enum:__anon91
LMIC_REGION_as923	lmic_config_preconditions.h	71;"	d
LMIC_REGION_au921	lmic_config_preconditions.h	69;"	d
LMIC_REGION_cn490	lmic_config_preconditions.h	70;"	d
LMIC_REGION_cn783	lmic_config_preconditions.h	67;"	d
LMIC_REGION_eu433	lmic_config_preconditions.h	68;"	d
LMIC_REGION_eu868	lmic_config_preconditions.h	65;"	d
LMIC_REGION_in866	lmic_config_preconditions.h	73;"	d
LMIC_REGION_kr921	lmic_config_preconditions.h	72;"	d
LMIC_REGION_us915	lmic_config_preconditions.h	66;"	d
LMIC_SPI_FREQ	config.h	76;"	d
LMIC_STRINGIFY	lmic.h	40;"	d
LMIC_STRINGIFY_	lmic.h	39;"	d
LMIC_VERSION_BUILD	lmic.h	77;"	d
LMIC_VERSION_MAJOR	lmic.h	75;"	d
LMIC_VERSION_MINOR	lmic.h	76;"	d
LMIC_clrTxData	lmic.c	/^void LMIC_clrTxData (void) {$/;"	f
LMIC_disableChannel	lmic_au921.c	/^void LMIC_disableChannel(u1_t channel) {$/;"	f
LMIC_disableChannel	lmic_eu_like.c	/^void LMIC_disableChannel(u1_t channel) {$/;"	f
LMIC_disableChannel	lmic_us915.c	/^void LMIC_disableChannel(u1_t channel) {$/;"	f
LMIC_disableSubBand	lmic_au921.c	/^void  LMIC_disableSubBand(u1_t band) {$/;"	f
LMIC_disableSubBand	lmic_eu_like.c	/^void  LMIC_disableSubBand(u1_t band) {$/;"	f
LMIC_disableSubBand	lmic_us915.c	/^void  LMIC_disableSubBand(u1_t band) {$/;"	f
LMIC_disableTracking	lmic.c	/^void LMIC_disableTracking (void) {$/;"	f
LMIC_enableChannel	lmic_au921.c	/^void LMIC_enableChannel(u1_t channel) {$/;"	f
LMIC_enableChannel	lmic_eu_like.c	/^void LMIC_enableChannel(u1_t channel) {$/;"	f
LMIC_enableChannel	lmic_us915.c	/^void LMIC_enableChannel(u1_t channel) {$/;"	f
LMIC_enableSubBand	lmic_au921.c	/^void  LMIC_enableSubBand(u1_t band) {$/;"	f
LMIC_enableSubBand	lmic_eu_like.c	/^void  LMIC_enableSubBand(u1_t band) {$/;"	f
LMIC_enableSubBand	lmic_us915.c	/^void  LMIC_enableSubBand(u1_t band) {$/;"	f
LMIC_enableTracking	lmic.c	/^bit_t LMIC_enableTracking (u1_t tryBcnInfo) {$/;"	f
LMIC_getSeqnoUp	lmic.c	/^u4_t LMIC_getSeqnoUp(void) {$/;"	f
LMIC_getSessionKeys	lmic.c	/^void LMIC_getSessionKeys (u4_t *netid, devaddr_t *devaddr, xref2u1_t nwkKey, xref2u1_t artKey) {$/;"	f
LMIC_init	lmic.c	/^void LMIC_init (void) {$/;"	f
LMIC_reset	lmic.c	/^void LMIC_reset (void) {$/;"	f
LMIC_selectSubBand	lmic_au921.c	/^void  LMIC_selectSubBand(u1_t band) {$/;"	f
LMIC_selectSubBand	lmic_us915.c	/^void  LMIC_selectSubBand(u1_t band) {$/;"	f
LMIC_sendAlive	lmic.c	/^void LMIC_sendAlive (void) {$/;"	f
LMIC_setAdrMode	lmic.c	/^void LMIC_setAdrMode (bit_t enabled) {$/;"	f
LMIC_setClockError	lmic.c	/^void LMIC_setClockError(u2_t error) {$/;"	f
LMIC_setDrTxpow	lmic.c	/^void LMIC_setDrTxpow (dr_t dr, s1_t txpow) {$/;"	f
LMIC_setLinkCheckMode	lmic.c	/^void LMIC_setLinkCheckMode (bit_t enabled) {$/;"	f
LMIC_setPingable	lmic.c	/^void LMIC_setPingable (u1_t intvExp) {$/;"	f
LMIC_setSeqnoUp	lmic.c	/^u4_t LMIC_setSeqnoUp(u4_t seq_no) {$/;"	f
LMIC_setSession	lmic.c	/^void LMIC_setSession (u4_t netid, devaddr_t devaddr, xref2u1_t nwkKey, xref2u1_t artKey) {$/;"	f
LMIC_setTxData	lmic.c	/^void LMIC_setTxData (void) {$/;"	f
LMIC_setTxData2	lmic.c	/^int LMIC_setTxData2 (u1_t port, xref2u1_t data, u1_t dlen, u1_t confirmed) {$/;"	f
LMIC_setupBand	lmic_as923.c	/^bit_t LMIC_setupBand(u1_t bandidx, s1_t txpow, u2_t txcap) {$/;"	f
LMIC_setupBand	lmic_eu868.c	/^bit_t LMIC_setupBand(u1_t bandidx, s1_t txpow, u2_t txcap) {$/;"	f
LMIC_setupBand	lmic_in866.c	/^bit_t LMIC_setupBand(u1_t bandidx, s1_t txpow, u2_t txcap) {$/;"	f
LMIC_setupBand	lmic_us_like.c	/^bit_t LMIC_setupBand(u1_t bandidx, s1_t txpow, u2_t txcap) {$/;"	f
LMIC_setupChannel	lmic_as923.c	/^bit_t LMIC_setupChannel(u1_t chidx, u4_t freq, u2_t drmap, s1_t band) {$/;"	f
LMIC_setupChannel	lmic_au921.c	/^bit_t LMIC_setupChannel(u1_t chidx, u4_t freq, u2_t drmap, s1_t band) {$/;"	f
LMIC_setupChannel	lmic_eu868.c	/^bit_t LMIC_setupChannel(u1_t chidx, u4_t freq, u2_t drmap, s1_t band) {$/;"	f
LMIC_setupChannel	lmic_in866.c	/^bit_t LMIC_setupChannel(u1_t chidx, u4_t freq, u2_t drmap, s1_t band) {$/;"	f
LMIC_setupChannel	lmic_us915.c	/^bit_t LMIC_setupChannel(u1_t chidx, u4_t freq, u2_t drmap, s1_t band) {$/;"	f
LMIC_shutdown	lmic.c	/^void LMIC_shutdown (void) {$/;"	f
LMIC_startJoining	lmic.c	/^bit_t LMIC_startJoining (void) {$/;"	f
LMIC_stopPingable	lmic.c	/^void LMIC_stopPingable (void) {$/;"	f
LMIC_tryRejoin	lmic.c	/^void LMIC_tryRejoin (void) {$/;"	f
LMICas923_convFreq	lmic_as923.c	/^u4_t LMICas923_convFreq(xref2cu1_t ptr) {$/;"	f
LMICas923_dr2hsym	lmic_as923.c	/^ostime_t LMICas923_dr2hsym(uint8_t dr) {$/;"	f
LMICas923_getDownlinkDwellBit	lmic_as923.c	/^LMICas923_getDownlinkDwellBit(uint8_t mcmd_txparam) {$/;"	f	file:
LMICas923_getMaxEIRP	lmic_as923.c	/^static int8_t LMICas923_getMaxEIRP(uint8_t mcmd_txparam) {$/;"	f	file:
LMICas923_getUplinkDwellBit	lmic_as923.c	/^LMICas923_getUplinkDwellBit(uint8_t mcmd_txparam) {$/;"	f	file:
LMICas923_initDefaultChannels	lmic_as923.c	/^void LMICas923_initDefaultChannels(bit_t join) {$/;"	f
LMICas923_initJoinLoop	lmic_as923.c	/^LMICas923_initJoinLoop(void) {$/;"	f
LMICas923_isValidBeacon1	lmic_bandplan_as923.h	/^LMICas923_isValidBeacon1(const uint8_t *d) {$/;"	f
LMICas923_maxFrameLen	lmic_as923.c	/^uint8_t LMICas923_maxFrameLen(uint8_t dr) {$/;"	f
LMICas923_nextJoinState	lmic_as923.c	/^ostime_t LMICas923_nextJoinState(void) {$/;"	f
LMICas923_nextJoinTime	lmic_as923.c	/^ostime_t LMICas923_nextJoinTime(ostime_t time) {$/;"	f
LMICas923_nextTx	lmic_as923.c	/^ostime_t LMICas923_nextTx(ostime_t now) {$/;"	f
LMICas923_pow2dBm	lmic_as923.c	/^int8_t LMICas923_pow2dBm(uint8_t mcmd_ladr_p1) {$/;"	f
LMICas923_setBcnRxParams	lmic_as923.c	/^void LMICas923_setBcnRxParams(void) {$/;"	f
LMICas923_setRx1Params	lmic_as923.c	/^void LMICas923_setRx1Params(void) {$/;"	f
LMICas923_txDoneFSK	lmic_as923.c	/^LMICas923_txDoneFSK(ostime_t delay, osjobcb_t func) {$/;"	f
LMICas923_updateTx	lmic_as923.c	/^LMICas923_updateTx(ostime_t txbeg) {$/;"	f
LMICau921_convFreq	lmic_au921.c	/^u4_t LMICau921_convFreq(xref2cu1_t ptr) {$/;"	f
LMICau921_dr2hsym	lmic_au921.c	/^ostime_t LMICau921_dr2hsym(uint8_t dr) {$/;"	f
LMICau921_maxFrameLen	lmic_au921.c	/^uint8_t LMICau921_maxFrameLen(uint8_t dr) {$/;"	f
LMICau921_setBcnRxParams	lmic_au921.c	/^void LMICau921_setBcnRxParams(void) {$/;"	f
LMICau921_setRx1Params	lmic_au921.c	/^void LMICau921_setRx1Params(void) {$/;"	f
LMICau921_updateTx	lmic_au921.c	/^void LMICau921_updateTx(ostime_t txbeg) {$/;"	f
LMICbandplan_advanceBeaconChannel	lmic_eu_like.h	68;"	d
LMICbandplan_advanceBeaconChannel	lmic_us_like.h	66;"	d
LMICbandplan_convFreq	lmic_bandplan_as923.h	71;"	d
LMICbandplan_convFreq	lmic_bandplan_au921.h	55;"	d
LMICbandplan_convFreq	lmic_bandplan_eu868.h	74;"	d
LMICbandplan_convFreq	lmic_bandplan_in866.h	71;"	d
LMICbandplan_convFreq	lmic_bandplan_us915.h	54;"	d
LMICbandplan_getInitialDrJoin	lmic_bandplan_as923.h	65;"	d
LMICbandplan_getInitialDrJoin	lmic_bandplan_au921.h	49;"	d
LMICbandplan_getInitialDrJoin	lmic_bandplan_eu868.h	68;"	d
LMICbandplan_getInitialDrJoin	lmic_bandplan_in866.h	65;"	d
LMICbandplan_getInitialDrJoin	lmic_bandplan_us915.h	48;"	d
LMICbandplan_hasJoinCFlist	lmic_eu_like.h	66;"	d
LMICbandplan_hasJoinCFlist	lmic_us_like.h	64;"	d
LMICbandplan_initDefaultChannels	lmic_bandplan_as923.h	88;"	d
LMICbandplan_initDefaultChannels	lmic_bandplan_eu868.h	86;"	d
LMICbandplan_initDefaultChannels	lmic_bandplan_in866.h	83;"	d
LMICbandplan_initDefaultChannels	lmic_us_like.h	75;"	d
LMICbandplan_initJoinLoop	lmic_bandplan_as923.h	74;"	d
LMICbandplan_initJoinLoop	lmic_bandplan_eu868.h	77;"	d
LMICbandplan_initJoinLoop	lmic_bandplan_in866.h	74;"	d
LMICbandplan_initJoinLoop	lmic_us_like.h	87;"	d
LMICbandplan_isFSK	lmic_bandplan_as923.h	56;"	d
LMICbandplan_isFSK	lmic_bandplan_as923.h	57;"	d
LMICbandplan_isFSK	lmic_bandplan_eu868.h	59;"	d
LMICbandplan_isFSK	lmic_bandplan_eu868.h	60;"	d
LMICbandplan_isFSK	lmic_bandplan_in866.h	56;"	d
LMICbandplan_isFSK	lmic_bandplan_in866.h	57;"	d
LMICbandplan_isFSK	lmic_eu_like.h	56;"	d
LMICbandplan_isFSK	lmic_us_like.h	55;"	d
LMICbandplan_isValidBeacon1	lmic_bandplan_as923.h	52;"	d
LMICbandplan_isValidBeacon1	lmic_bandplan_as923.h	53;"	d
LMICbandplan_isValidBeacon1	lmic_bandplan_eu868.h	55;"	d
LMICbandplan_isValidBeacon1	lmic_bandplan_eu868.h	56;"	d
LMICbandplan_isValidBeacon1	lmic_bandplan_in866.h	52;"	d
LMICbandplan_isValidBeacon1	lmic_bandplan_in866.h	53;"	d
LMICbandplan_isValidBeacon1	lmic_eu_like.h	52;"	d
LMICbandplan_isValidBeacon1	lmic_us_like.h	52;"	d
LMICbandplan_joinAcceptChannelClear	lmic_eu_like.h	61;"	d
LMICbandplan_joinAcceptChannelClear	lmic_us_like.h	61;"	d
LMICbandplan_mapChannels	lmic_eu_like.h	78;"	d
LMICbandplan_mapChannels	lmic_us_like.h	81;"	d
LMICbandplan_nextJoinState	lmic_bandplan_as923.h	85;"	d
LMICbandplan_nextJoinState	lmic_bandplan_eu868.h	83;"	d
LMICbandplan_nextJoinState	lmic_bandplan_in866.h	80;"	d
LMICbandplan_nextJoinState	lmic_us_like.h	90;"	d
LMICbandplan_nextJoinTime	lmic_bandplan_as923.h	95;"	d
LMICbandplan_nextJoinTime	lmic_bandplan_as923.h	97;"	d
LMICbandplan_nextJoinTime	lmic_bandplan_eu868.h	88;"	d
LMICbandplan_nextJoinTime	lmic_bandplan_eu868.h	90;"	d
LMICbandplan_nextJoinTime	lmic_eu_like.h	93;"	d
LMICbandplan_nextJoinTime	lmic_us_like.h	95;"	d
LMICbandplan_nextTx	lmic_bandplan_as923.h	82;"	d
LMICbandplan_nextTx	lmic_bandplan_eu868.h	80;"	d
LMICbandplan_nextTx	lmic_bandplan_in866.h	77;"	d
LMICbandplan_nextTx	lmic_us_like.h	84;"	d
LMICbandplan_resetDefaultChannels	lmic_eu_like.h	71;"	d
LMICbandplan_resetDefaultChannels	lmic_us_like.h	71;"	d
LMICbandplan_setBcnRxParams	lmic_bandplan_as923.h	68;"	d
LMICbandplan_setBcnRxParams	lmic_bandplan_au921.h	52;"	d
LMICbandplan_setBcnRxParams	lmic_bandplan_eu868.h	71;"	d
LMICbandplan_setBcnRxParams	lmic_bandplan_in866.h	68;"	d
LMICbandplan_setBcnRxParams	lmic_bandplan_us915.h	51;"	d
LMICbandplan_setRx1Params	lmic_bandplan_as923.h	77;"	d
LMICbandplan_setRx1Params	lmic_bandplan_as923.h	79;"	d
LMICbandplan_setRx1Params	lmic_bandplan_au921.h	58;"	d
LMICbandplan_setRx1Params	lmic_bandplan_us915.h	57;"	d
LMICbandplan_setRx1Params	lmic_eu_like.h	82;"	d
LMICbandplan_setSessionInitDefaultChannels	lmic_eu_like.h	74;"	d
LMICbandplan_setSessionInitDefaultChannels	lmic_us_like.h	77;"	d
LMICbandplan_txDoneFSK	lmic_eu_like.h	59;"	d
LMICbandplan_txDoneFSK	lmic_us_like.h	58;"	d
LMICbandplan_txDoneFsk	lmic_bandplan_as923.h	63;"	d
LMICbandplan_txDoneFsk	lmic_bandplan_eu868.h	66;"	d
LMICbandplan_txDoneFsk	lmic_bandplan_in866.h	63;"	d
LMICbandplan_updateTx	lmic_bandplan_as923.h	91;"	d
LMICbandplan_updateTx	lmic_bandplan_as923.h	93;"	d
LMICbandplan_updateTx	lmic_bandplan_au921.h	61;"	d
LMICbandplan_updateTx	lmic_bandplan_us915.h	60;"	d
LMICbandplan_updateTx	lmic_eu_like.h	86;"	d
LMICcore_rndDelay	lmic.c	/^ostime_t LMICcore_rndDelay (u1_t secSpan) {$/;"	f
LMICcore_setDrJoin	lmic.c	/^void LMICcore_setDrJoin (u1_t reason, u1_t dr) {$/;"	f
LMICeu868_convFreq	lmic_eu868.c	/^u4_t LMICeu868_convFreq(xref2cu1_t ptr) {$/;"	f
LMICeu868_dr2hsym	lmic_eu868.c	/^ostime_t LMICeu868_dr2hsym(uint8_t dr) {$/;"	f
LMICeu868_initDefaultChannels	lmic_eu868.c	/^void LMICeu868_initDefaultChannels(bit_t join) {$/;"	f
LMICeu868_initJoinLoop	lmic_eu868.c	/^LMICeu868_initJoinLoop(void) {$/;"	f
LMICeu868_isValidBeacon1	lmic_bandplan_eu868.h	/^LMICeu868_isValidBeacon1(const uint8_t *d) {$/;"	f
LMICeu868_maxFrameLen	lmic_eu868.c	/^uint8_t LMICeu868_maxFrameLen(uint8_t dr) {$/;"	f
LMICeu868_nextJoinState	lmic_eu868.c	/^ostime_t LMICeu868_nextJoinState(void) {$/;"	f
LMICeu868_nextJoinTime	lmic_eu868.c	/^ostime_t LMICeu868_nextJoinTime(ostime_t time) {$/;"	f
LMICeu868_nextTx	lmic_eu868.c	/^ostime_t LMICeu868_nextTx(ostime_t now) {$/;"	f
LMICeu868_pow2dBm	lmic_eu868.c	/^int8_t LMICeu868_pow2dBm(uint8_t mcmd_ladr_p1) {$/;"	f
LMICeu868_setBcnRxParams	lmic_eu868.c	/^void LMICeu868_setBcnRxParams(void) {$/;"	f
LMICeu868_txDoneFSK	lmic_eu868.c	/^LMICeu868_txDoneFSK(ostime_t delay, osjobcb_t func) {$/;"	f
LMICeulike_initJoinLoop	lmic_eu_like.c	/^void LMICeulike_initJoinLoop(uint8_t nDefaultChannels, s1_t adrTxPow) {$/;"	f
LMICeulike_isValidBeacon1	lmic_eu_like.h	/^LMICeulike_isValidBeacon1(const uint8_t *d) {$/;"	f
LMICeulike_mapChannels	lmic_eu_like.c	/^u1_t LMICeulike_mapChannels(u1_t chpage, u2_t chmap) {$/;"	f
LMICeulike_nextJoinState	lmic_eu_like.c	/^ostime_t LMICeulike_nextJoinState(uint8_t nDefaultChannels) {$/;"	f
LMICeulike_nextJoinTime	lmic_eu_like.h	/^static inline ostime_t LMICeulike_nextJoinTime(ostime_t now) {$/;"	f
LMICeulike_nextJoinTime	lmic_us_like.h	/^static inline ostime_t LMICeulike_nextJoinTime(ostime_t now) {$/;"	f
LMICeulike_updateTx	lmic_eu_like.c	/^void LMICeulike_updateTx(ostime_t txbeg) {$/;"	f
LMICin866_convFreq	lmic_in866.c	/^u4_t LMICin866_convFreq(xref2cu1_t ptr) {$/;"	f
LMICin866_dr2hsym	lmic_in866.c	/^ostime_t LMICin866_dr2hsym(uint8_t dr) {$/;"	f
LMICin866_initDefaultChannels	lmic_in866.c	/^void LMICin866_initDefaultChannels(bit_t join) {$/;"	f
LMICin866_initJoinLoop	lmic_in866.c	/^LMICin866_initJoinLoop(void) {$/;"	f
LMICin866_isValidBeacon1	lmic_bandplan_in866.h	/^LMICin866_isValidBeacon1(const uint8_t *d) {$/;"	f
LMICin866_maxFrameLen	lmic_in866.c	/^uint8_t LMICin866_maxFrameLen(uint8_t dr) {$/;"	f
LMICin866_nextJoinState	lmic_in866.c	/^ostime_t LMICin866_nextJoinState(void) {$/;"	f
LMICin866_nextTx	lmic_in866.c	/^ostime_t LMICin866_nextTx(ostime_t now) {$/;"	f
LMICin866_pow2dBm	lmic_in866.c	/^int8_t LMICin866_pow2dBm(uint8_t mcmd_ladr_p1) {$/;"	f
LMICin866_setBcnRxParams	lmic_in866.c	/^void LMICin866_setBcnRxParams(void) {$/;"	f
LMICin866_txDoneFSK	lmic_in866.c	/^LMICin866_txDoneFSK(ostime_t delay, osjobcb_t func) {$/;"	f
LMICus915_convFreq	lmic_us915.c	/^u4_t LMICus915_convFreq(xref2cu1_t ptr) {$/;"	f
LMICus915_dr2hsym	lmic_us915.c	/^ostime_t LMICus915_dr2hsym(uint8_t dr) {$/;"	f
LMICus915_maxFrameLen	lmic_us915.c	/^uint8_t LMICus915_maxFrameLen(uint8_t dr) {$/;"	f
LMICus915_setBcnRxParams	lmic_us915.c	/^void LMICus915_setBcnRxParams(void) {$/;"	f
LMICus915_setRx1Params	lmic_us915.c	/^void LMICus915_setRx1Params(void) {$/;"	f
LMICus915_updateTx	lmic_us915.c	/^void LMICus915_updateTx(ostime_t txbeg) {$/;"	f
LMICuslike_getFirst500kHzDR	lmic_bandplan_au921.h	33;"	d
LMICuslike_getFirst500kHzDR	lmic_bandplan_us915.h	33;"	d
LMICuslike_initDefaultChannels	lmic_us_like.c	/^void LMICuslike_initDefaultChannels(bit_t fJoin) {$/;"	f
LMICuslike_initJoinLoop	lmic_us_like.c	/^void LMICuslike_initJoinLoop(void) {$/;"	f
LMICuslike_isValidBeacon1	lmic_us_like.h	/^LMICuslike_isValidBeacon1(const uint8_t *d) {$/;"	f
LMICuslike_mapChannels	lmic_us_like.c	/^u1_t LMICuslike_mapChannels(u1_t chpage, u2_t chmap) {$/;"	f
LMICuslike_nextJoinState	lmic_us_like.c	/^ostime_t LMICuslike_nextJoinState(void) {$/;"	f
LMICuslike_nextTx	lmic_us_like.c	/^ostime_t LMICuslike_nextTx(ostime_t now) {$/;"	f
LNA_RX_GAIN	radio.c	273;"	d	file:
LNA_RX_GAIN	radio.c	275;"	d	file:
LORAFeiMib	radio.c	99;"	d	file:
LORARegDetectOptimize	radio.c	111;"	d	file:
LORARegDetectionThreshold	radio.c	119;"	d	file:
LORARegFeiLsb	radio.c	101;"	d	file:
LORARegFeiMsb	radio.c	97;"	d	file:
LORARegFifoAddrPtr	radio.c	48;"	d	file:
LORARegFifoRxBaseAddr	radio.c	52;"	d	file:
LORARegFifoRxByteAddr	radio.c	93;"	d	file:
LORARegFifoRxCurrentAddr	radio.c	54;"	d	file:
LORARegFifoTxBaseAddr	radio.c	50;"	d	file:
LORARegHopChannel	radio.c	75;"	d	file:
LORARegHopPeriod	radio.c	91;"	d	file:
LORARegInvertIQ	radio.c	114;"	d	file:
LORARegIrqFlags	radio.c	58;"	d	file:
LORARegIrqFlagsMask	radio.c	56;"	d	file:
LORARegModemConfig1	radio.c	77;"	d	file:
LORARegModemConfig2	radio.c	79;"	d	file:
LORARegModemConfig3	radio.c	94;"	d	file:
LORARegModemStat	radio.c	68;"	d	file:
LORARegPayloadLength	radio.c	87;"	d	file:
LORARegPayloadMaxLength	radio.c	89;"	d	file:
LORARegPktRssiValue	radio.c	71;"	d	file:
LORARegPktSnrValue	radio.c	69;"	d	file:
LORARegPreambleLsb	radio.c	85;"	d	file:
LORARegPreambleMsb	radio.c	83;"	d	file:
LORARegRssiValue	radio.c	73;"	d	file:
LORARegRssiWideband	radio.c	104;"	d	file:
LORARegRxHeaderCntValueLsb	radio.c	64;"	d	file:
LORARegRxHeaderCntValueMsb	radio.c	62;"	d	file:
LORARegRxNbBytes	radio.c	60;"	d	file:
LORARegRxPacketCntValueMsb	radio.c	66;"	d	file:
LORARegRxpacketCntValueLsb	radio.c	67;"	d	file:
LORARegSymbTimeoutLsb	radio.c	81;"	d	file:
LORARegSyncWord	radio.c	122;"	d	file:
LORAWAN_DR0	lorabase.h	/^        LORAWAN_DR0 = 0,$/;"	e	enum:_dr_code_t
LORAWAN_DR1	lorabase.h	/^        LORAWAN_DR1,$/;"	e	enum:_dr_code_t
LORAWAN_DR10	lorabase.h	/^        LORAWAN_DR10,$/;"	e	enum:_dr_code_t
LORAWAN_DR11	lorabase.h	/^        LORAWAN_DR11,$/;"	e	enum:_dr_code_t
LORAWAN_DR12	lorabase.h	/^        LORAWAN_DR12,$/;"	e	enum:_dr_code_t
LORAWAN_DR13	lorabase.h	/^        LORAWAN_DR13,$/;"	e	enum:_dr_code_t
LORAWAN_DR14	lorabase.h	/^        LORAWAN_DR14,$/;"	e	enum:_dr_code_t
LORAWAN_DR15	lorabase.h	/^        LORAWAN_DR15,$/;"	e	enum:_dr_code_t
LORAWAN_DR2	lorabase.h	/^        LORAWAN_DR2,$/;"	e	enum:_dr_code_t
LORAWAN_DR3	lorabase.h	/^        LORAWAN_DR3,$/;"	e	enum:_dr_code_t
LORAWAN_DR4	lorabase.h	/^        LORAWAN_DR4,$/;"	e	enum:_dr_code_t
LORAWAN_DR5	lorabase.h	/^        LORAWAN_DR5,$/;"	e	enum:_dr_code_t
LORAWAN_DR6	lorabase.h	/^        LORAWAN_DR6,$/;"	e	enum:_dr_code_t
LORAWAN_DR7	lorabase.h	/^        LORAWAN_DR7,$/;"	e	enum:_dr_code_t
LORAWAN_DR8	lorabase.h	/^        LORAWAN_DR8,$/;"	e	enum:_dr_code_t
LORAWAN_DR9	lorabase.h	/^        LORAWAN_DR9,$/;"	e	enum:_dr_code_t
LORAWAN_DR_LENGTH	lorabase.h	/^        LORAWAN_DR_LENGTH       \/\/ 16, for sizing arrays.$/;"	e	enum:_dr_code_t
LORA_MAC_PREAMBLE	radio.c	189;"	d	file:
MAKERPS	lorabase.h	607;"	d
MAP_DIO0_FSK_READY	radio.c	249;"	d	file:
MAP_DIO0_LORA_RXDONE	radio.c	243;"	d	file:
MAP_DIO0_LORA_TXDONE	radio.c	244;"	d	file:
MAP_DIO1_FSK_NOP	radio.c	250;"	d	file:
MAP_DIO1_LORA_NOP	radio.c	246;"	d	file:
MAP_DIO1_LORA_RXTOUT	radio.c	245;"	d	file:
MAP_DIO2_FSK_TIMEOUT	radio.c	252;"	d	file:
MAP_DIO2_FSK_TXNOP	radio.c	251;"	d	file:
MAP_DIO2_LORA_NOP	radio.c	247;"	d	file:
MAX_BANDS	lmic.h	/^enum { MAX_BANDS    =  4 };$/;"	e	enum:__anon13
MAX_CHANNELS	lmic.h	/^enum { MAX_CHANNELS = 16 };      \/\/!< Max supported channels$/;"	e	enum:__anon12
MAX_CLOCK_ERROR	lmic.h	/^        MAX_CLOCK_ERROR = 65536,$/;"	e	enum:__anon23
MAX_FRAME_LEN	lmic.h	/^enum { MAX_FRAME_LEN      =  64 };   \/\/!< Library cap on max frame length$/;"	e	enum:__anon2
MAX_LEN_FRAME	lorabase.h	/^enum { MAX_LEN_FRAME     = 64 };$/;"	e	enum:__anon48
MAX_LEN_PAYLOAD	lorabase.h	/^enum { MAX_LEN_PAYLOAD = MAX_LEN_FRAME-(int)OFF_DAT_OPTS-4 };$/;"	e	enum:__anon131
MAX_MISSED_BCNS	lmic.h	/^enum { MAX_MISSED_BCNS    =  20 };   \/\/ threshold for triggering rejoin requests$/;"	e	enum:__anon4
MAX_RXSYMS	lmic.h	/^enum { MAX_RXSYMS         = 100 };   \/\/ stop tracking beacon beyond this$/;"	e	enum:__anon5
MAX_XCHANNELS	lmic.h	/^enum { MAX_XCHANNELS = 2 };      \/\/ extra channels in RAM, channels 0-71 are immutable$/;"	e	enum:__anon15
MCMD_BCNI_ANS	lorabase.h	/^    MCMD_BCNI_ANS = 0x12, \/\/ next beacon start  : u2: delay(in TUNIT millis), u1:channel$/;"	e	enum:__anon140
MCMD_BCNI_REQ	lorabase.h	/^    MCMD_BCNI_REQ = 0x12, \/\/ -  next beacon start  : -$/;"	e	enum:__anon139
MCMD_BCNI_TUNIT	lorabase.h	/^    MCMD_BCNI_TUNIT = 30  \/\/ time unit of delay value in millis$/;"	e	enum:__anon141
MCMD_DCAP_ANS	lorabase.h	/^    MCMD_DCAP_ANS = 0x04, \/\/ -  DutyCycleAns       : -$/;"	e	enum:__anon139
MCMD_DCAP_REQ	lorabase.h	/^    MCMD_DCAP_REQ = 0x04, \/\/ DutyCycleReq       : u1:255 dead [7-4]:RFU, [3-0]:cap 2^-k$/;"	e	enum:__anon140
MCMD_DEVS_ANS	lorabase.h	/^    MCMD_DEVS_ANS = 0x06, \/\/ -  DevStatusAns       : u1:battery 0,1-254,255=?, u1:7-6:RFU,5-0:margin(-32..31)$/;"	e	enum:__anon139
MCMD_DEVS_BATT_MAX	lorabase.h	/^    MCMD_DEVS_BATT_MAX    = 0xFE, \/\/ max battery value$/;"	e	enum:__anon146
MCMD_DEVS_BATT_MIN	lorabase.h	/^    MCMD_DEVS_BATT_MIN    = 0x01, \/\/ min battery value$/;"	e	enum:__anon146
MCMD_DEVS_BATT_NOINFO	lorabase.h	/^    MCMD_DEVS_BATT_NOINFO = 0xFF, \/\/ unknown battery level$/;"	e	enum:__anon146
MCMD_DEVS_EXT_POWER	lorabase.h	/^    MCMD_DEVS_EXT_POWER   = 0x00, \/\/ external power supply$/;"	e	enum:__anon146
MCMD_DEVS_REQ	lorabase.h	/^    MCMD_DEVS_REQ = 0x06, \/\/ DevStatusReq       : -$/;"	e	enum:__anon140
MCMD_DIChannelAns	lorabase.h	/^    MCMD_DIChannelAns = 0x0A,           \/\/         : u1: [7-2]:RFU 1:exists 0:OK$/;"	e	enum:__anon139
MCMD_DIChannelReq	lorabase.h	/^    MCMD_DIChannelReq = 0x0A,           \/\/      : u1: channel, u3: frequency$/;"	e	enum:__anon140
MCMD_DN2P_ANS	lorabase.h	/^    MCMD_DN2P_ANS = 0x05, \/\/ -  RxParamSetupAns    : u1:7-2:RFU  1\/0:datarate\/channel ack$/;"	e	enum:__anon139
MCMD_DN2P_ANS_CHACK	lorabase.h	/^    MCMD_DN2P_ANS_CHACK  = 0x01, \/\/ 0=unknown channel enabled$/;"	e	enum:__anon143
MCMD_DN2P_ANS_DRACK	lorabase.h	/^    MCMD_DN2P_ANS_DRACK  = 0x02, \/\/ 0=unknown data rate$/;"	e	enum:__anon143
MCMD_DN2P_ANS_RFU	lorabase.h	/^    MCMD_DN2P_ANS_RFU    = 0xFC, \/\/ RFU bits$/;"	e	enum:__anon143
MCMD_DN2P_SET	lorabase.h	/^    MCMD_DN2P_SET = 0x05, \/\/ RXParamSetupReq    : u1:7-4:RFU\/3-0:datarate, u3:freq$/;"	e	enum:__anon140
MCMD_LADR_ANS	lorabase.h	/^    MCMD_LADR_ANS = 0x03, \/\/ -  LinkADRAnd         : u1:7-3:RFU, 3\/2\/1: pow\/DR\/Ch ACK$/;"	e	enum:__anon139
MCMD_LADR_ANS_CHACK	lorabase.h	/^    MCMD_LADR_ANS_CHACK  = 0x01, \/\/ 0=unknown channel enabled$/;"	e	enum:__anon142
MCMD_LADR_ANS_DRACK	lorabase.h	/^    MCMD_LADR_ANS_DRACK  = 0x02, \/\/ 0=unknown data rate$/;"	e	enum:__anon142
MCMD_LADR_ANS_POWACK	lorabase.h	/^    MCMD_LADR_ANS_POWACK = 0x04, \/\/ 0=not supported power level$/;"	e	enum:__anon142
MCMD_LADR_ANS_RFU	lorabase.h	/^    MCMD_LADR_ANS_RFU    = 0xF8, \/\/ RFU bits$/;"	e	enum:__anon142
MCMD_LADR_CHPAGE_1	lorabase.h	/^    MCMD_LADR_CHPAGE_1    = 0x10$/;"	e	enum:__anon147
MCMD_LADR_CHPAGE_MASK	lorabase.h	/^    MCMD_LADR_CHPAGE_MASK = 0xF0,$/;"	e	enum:__anon147
MCMD_LADR_CHP_125OFF	lorabase.h	/^    MCMD_LADR_CHP_125OFF  = 0x70,  \/\/  ditto$/;"	e	enum:__anon147
MCMD_LADR_CHP_125ON	lorabase.h	/^    MCMD_LADR_CHP_125ON   = 0x60,  \/\/ special channel page enable, bits applied to 64..71$/;"	e	enum:__anon147
MCMD_LADR_DR_MASK	lorabase.h	/^    MCMD_LADR_DR_MASK    = 0xF0,$/;"	e	enum:__anon148
MCMD_LADR_DR_SHIFT	lorabase.h	/^    MCMD_LADR_DR_SHIFT   = 4,$/;"	e	enum:__anon148
MCMD_LADR_N3RFU_MASK	lorabase.h	/^    MCMD_LADR_N3RFU_MASK  = 0x80,$/;"	e	enum:__anon147
MCMD_LADR_POW_MASK	lorabase.h	/^    MCMD_LADR_POW_MASK   = 0x0F,$/;"	e	enum:__anon148
MCMD_LADR_POW_SHIFT	lorabase.h	/^    MCMD_LADR_POW_SHIFT  = 0,$/;"	e	enum:__anon148
MCMD_LADR_REPEAT_1	lorabase.h	/^    MCMD_LADR_REPEAT_1    = 0x01,$/;"	e	enum:__anon147
MCMD_LADR_REPEAT_MASK	lorabase.h	/^    MCMD_LADR_REPEAT_MASK = 0x0F,$/;"	e	enum:__anon147
MCMD_LADR_REQ	lorabase.h	/^    MCMD_LADR_REQ = 0x03, \/\/ LinkADRReq         : u1:DR\/TXPow, u2:chmask, u1:chpage\/repeat$/;"	e	enum:__anon140
MCMD_LCHK_ANS	lorabase.h	/^    MCMD_LCHK_ANS = 0x02, \/\/ LinkCheckAns       : u1:margin 0-254,255=unknown margin \/ u1:gwcnt         LinkCheckReq$/;"	e	enum:__anon140
MCMD_LCHK_REQ	lorabase.h	/^    MCMD_LCHK_REQ = 0x02, \/\/ -  LinkCheckReq       : -$/;"	e	enum:__anon139
MCMD_PING_ANS	lorabase.h	/^    MCMD_PING_ANS = 0x11, \/\/ -  ack ping freq      : u1: 7-1:RFU, 0:freq ok$/;"	e	enum:__anon139
MCMD_PING_ANS_FQACK	lorabase.h	/^    MCMD_PING_ANS_FQACK = 0x01$/;"	e	enum:__anon145
MCMD_PING_ANS_RFU	lorabase.h	/^    MCMD_PING_ANS_RFU   = 0xFE,$/;"	e	enum:__anon145
MCMD_PING_IND	lorabase.h	/^    MCMD_PING_IND = 0x10, \/\/ -  pingability indic  : u1: 7=RFU, 6-4:interval, 3-0:datarate$/;"	e	enum:__anon139
MCMD_PING_SET	lorabase.h	/^    MCMD_PING_SET = 0x11, \/\/ set ping freq      : u3: freq$/;"	e	enum:__anon140
MCMD_RXTimingSetupAns	lorabase.h	/^    MCMD_RXTimingSetupAns = 0x08,       \/\/         : -$/;"	e	enum:__anon139
MCMD_RXTimingSetupReq	lorabase.h	/^    MCMD_RXTimingSetupReq = 0x08,       \/\/      : u1: [7-4]:RFU [3-0]: Delay 1-15s (0 => 1)$/;"	e	enum:__anon140
MCMD_SNCH_ANS	lorabase.h	/^    MCMD_SNCH_ANS = 0x07, \/\/ -  NewChannelAns      : u1: 7-2=RFU, 1\/0:DR\/freq ACK$/;"	e	enum:__anon139
MCMD_SNCH_ANS_DRACK	lorabase.h	/^    MCMD_SNCH_ANS_DRACK  = 0x02, \/\/ 0=unknown data rate$/;"	e	enum:__anon144
MCMD_SNCH_ANS_FQACK	lorabase.h	/^    MCMD_SNCH_ANS_FQACK  = 0x01, \/\/ 0=rejected channel frequency$/;"	e	enum:__anon144
MCMD_SNCH_ANS_RFU	lorabase.h	/^    MCMD_SNCH_ANS_RFU    = 0xFC, \/\/ RFU bits$/;"	e	enum:__anon144
MCMD_SNCH_REQ	lorabase.h	/^    MCMD_SNCH_REQ = 0x07, \/\/ NewChannelReq      : u1:chidx, u3:freq, u1:DRrange$/;"	e	enum:__anon140
MCMD_TxParamSetupAns	lorabase.h	/^    MCMD_TxParamSetupAns = 0x09,        \/\/         : -$/;"	e	enum:__anon139
MCMD_TxParamSetupReq	lorabase.h	/^    MCMD_TxParamSetupReq = 0x09,        \/\/      : u1: [7-6]:RFU [5:4]: dl dwell\/ul dwell [3:0] max EIRP$/;"	e	enum:__anon140
MCMD_TxParam_MaxEIRP_MASK	lorabase.h	/^    MCMD_TxParam_MaxEIRP_MASK    = 0xF << MCMD_TxParam_MaxEIRP_SHIFT,$/;"	e	enum:__anon149
MCMD_TxParam_MaxEIRP_SHIFT	lorabase.h	/^    MCMD_TxParam_MaxEIRP_SHIFT   = 0,$/;"	e	enum:__anon149
MCMD_TxParam_RxDWELL_MASK	lorabase.h	/^    MCMD_TxParam_RxDWELL_MASK    = 1 << MCMD_TxParam_RxDWELL_SHIFT,$/;"	e	enum:__anon149
MCMD_TxParam_RxDWELL_SHIFT	lorabase.h	/^    MCMD_TxParam_RxDWELL_SHIFT   = 5,$/;"	e	enum:__anon149
MCMD_TxParam_TxDWELL_MASK	lorabase.h	/^    MCMD_TxParam_TxDWELL_MASK    = 1 << MCMD_TxParam_TxDWELL_SHIFT,$/;"	e	enum:__anon149
MCMD_TxParam_TxDWELL_SHIFT	lorabase.h	/^    MCMD_TxParam_TxDWELL_SHIFT   = 4,$/;"	e	enum:__anon149
MINRX_SYMS	lmic_bandplan.h	147;"	d
NETID_MASK	lmic.h	/^enum { NETID_NONE=(int)~0U, NETID_MASK=(int)0xFFFFFF };$/;"	e	enum:__anon20
NETID_NONE	lmic.h	/^enum { NETID_NONE=(int)~0U, NETID_MASK=(int)0xFFFFFF };$/;"	e	enum:__anon20
NUM_DEFAULT_CHANNELS	lmic_as923.c	/^enum { NUM_DEFAULT_CHANNELS = 2 };$/;"	e	enum:__anon45	file:
NUM_DEFAULT_CHANNELS	lmic_eu868.c	/^enum { NUM_DEFAULT_CHANNELS = 3 };$/;"	e	enum:__anon158	file:
NUM_DEFAULT_CHANNELS	lmic_in866.c	/^enum { NUM_DEFAULT_CHANNELS = 3 };$/;"	e	enum:__anon29	file:
NWKID_BITS	lorabase.h	/^    NWKID_BITS = 7$/;"	e	enum:__anon138
NWKID_MASK	lorabase.h	/^    NWKID_MASK = (int)0xFE000000,$/;"	e	enum:__anon138
OFF_BCN_CRC1	lorabase.h	/^        OFF_BCN_CRC1 = 5,$/;"	e	enum:__anon127
OFF_BCN_CRC1	lorabase.h	/^        OFF_BCN_CRC1 = 6,$/;"	e	enum:__anon115
OFF_BCN_CRC1	lorabase.h	/^        OFF_BCN_CRC1 = 7,$/;"	e	enum:__anon103
OFF_BCN_CRC1	lorabase.h	/^        OFF_BCN_CRC1 = 7,$/;"	e	enum:__anon81
OFF_BCN_CRC1	lorabase.h	/^    OFF_BCN_CRC1     = 7,$/;"	e	enum:__anon92
OFF_BCN_CRC2	lorabase.h	/^        OFF_BCN_CRC2 = 15,$/;"	e	enum:__anon115
OFF_BCN_CRC2	lorabase.h	/^        OFF_BCN_CRC2 = 15,$/;"	e	enum:__anon81
OFF_BCN_CRC2	lorabase.h	/^        OFF_BCN_CRC2 = 17,$/;"	e	enum:__anon103
OFF_BCN_CRC2	lorabase.h	/^        OFF_BCN_CRC2 = 17,$/;"	e	enum:__anon127
OFF_BCN_CRC2	lorabase.h	/^    OFF_BCN_CRC2     = 17,$/;"	e	enum:__anon92
OFF_BCN_INFO	lorabase.h	/^        OFF_BCN_INFO = 7,$/;"	e	enum:__anon127
OFF_BCN_INFO	lorabase.h	/^        OFF_BCN_INFO = 8,$/;"	e	enum:__anon115
OFF_BCN_INFO	lorabase.h	/^        OFF_BCN_INFO = 8,$/;"	e	enum:__anon81
OFF_BCN_INFO	lorabase.h	/^        OFF_BCN_INFO = 9,$/;"	e	enum:__anon103
OFF_BCN_INFO	lorabase.h	/^    OFF_BCN_INFO     = 9,$/;"	e	enum:__anon92
OFF_BCN_LAT	lorabase.h	/^        OFF_BCN_LAT = 10,$/;"	e	enum:__anon103
OFF_BCN_LAT	lorabase.h	/^        OFF_BCN_LAT = 8,$/;"	e	enum:__anon127
OFF_BCN_LAT	lorabase.h	/^        OFF_BCN_LAT = 9,$/;"	e	enum:__anon115
OFF_BCN_LAT	lorabase.h	/^        OFF_BCN_LAT = 9,$/;"	e	enum:__anon81
OFF_BCN_LAT	lorabase.h	/^    OFF_BCN_LAT      = 10,$/;"	e	enum:__anon92
OFF_BCN_LON	lorabase.h	/^        OFF_BCN_LON = 11,$/;"	e	enum:__anon127
OFF_BCN_LON	lorabase.h	/^        OFF_BCN_LON = 12,$/;"	e	enum:__anon115
OFF_BCN_LON	lorabase.h	/^        OFF_BCN_LON = 12,$/;"	e	enum:__anon81
OFF_BCN_LON	lorabase.h	/^        OFF_BCN_LON = 13,$/;"	e	enum:__anon103
OFF_BCN_LON	lorabase.h	/^    OFF_BCN_LON      = 13,$/;"	e	enum:__anon92
OFF_BCN_NETID	lorabase.h	/^        OFF_BCN_NETID = 0,$/;"	e	enum:__anon103
OFF_BCN_NETID	lorabase.h	/^        OFF_BCN_NETID = 0,$/;"	e	enum:__anon115
OFF_BCN_NETID	lorabase.h	/^        OFF_BCN_NETID = 0,$/;"	e	enum:__anon127
OFF_BCN_NETID	lorabase.h	/^        OFF_BCN_NETID = 0,$/;"	e	enum:__anon81
OFF_BCN_NETID	lorabase.h	/^    OFF_BCN_NETID    = 0,$/;"	e	enum:__anon92
OFF_BCN_RFU1	lorabase.h	/^        OFF_BCN_RFU1 = 16,$/;"	e	enum:__anon103
OFF_BCN_RFU1	lorabase.h	/^    OFF_BCN_RFU1     = 16,$/;"	e	enum:__anon92
OFF_BCN_TIME	lorabase.h	/^        OFF_BCN_TIME = 1,$/;"	e	enum:__anon127
OFF_BCN_TIME	lorabase.h	/^        OFF_BCN_TIME = 2,$/;"	e	enum:__anon115
OFF_BCN_TIME	lorabase.h	/^        OFF_BCN_TIME = 3,$/;"	e	enum:__anon103
OFF_BCN_TIME	lorabase.h	/^        OFF_BCN_TIME = 3,$/;"	e	enum:__anon81
OFF_BCN_TIME	lorabase.h	/^    OFF_BCN_TIME     = 3,$/;"	e	enum:__anon92
OFF_CFLIST	lorabase.h	/^    OFF_CFLIST      = 13,$/;"	e	enum:__anon129
OFF_DAT_ADDR	lorabase.h	/^    OFF_DAT_ADDR     = 1,$/;"	e	enum:__anon130
OFF_DAT_FCT	lorabase.h	/^    OFF_DAT_FCT      = 5,$/;"	e	enum:__anon130
OFF_DAT_HDR	lorabase.h	/^    OFF_DAT_HDR      = 0,$/;"	e	enum:__anon130
OFF_DAT_OPTS	lorabase.h	/^    OFF_DAT_OPTS     = 8,$/;"	e	enum:__anon130
OFF_DAT_SEQNO	lorabase.h	/^    OFF_DAT_SEQNO    = 6,$/;"	e	enum:__anon130
OFF_JA_ARTNONCE	lorabase.h	/^    OFF_JA_ARTNONCE = 1,$/;"	e	enum:__anon129
OFF_JA_DEVADDR	lorabase.h	/^    OFF_JA_DEVADDR  = 7,$/;"	e	enum:__anon129
OFF_JA_DLSET	lorabase.h	/^    OFF_JA_DLSET    = 11,$/;"	e	enum:__anon129
OFF_JA_HDR	lorabase.h	/^    OFF_JA_HDR      = 0,$/;"	e	enum:__anon129
OFF_JA_NETID	lorabase.h	/^    OFF_JA_NETID    = 4,$/;"	e	enum:__anon129
OFF_JA_RFU	lorabase.h	/^    OFF_JA_RFU      = 11,$/;"	e	enum:__anon129
OFF_JA_RXDLY	lorabase.h	/^    OFF_JA_RXDLY    = 12,$/;"	e	enum:__anon129
OFF_JR_ARTEUI	lorabase.h	/^    OFF_JR_ARTEUI   = 1,$/;"	e	enum:__anon128
OFF_JR_DEVEUI	lorabase.h	/^    OFF_JR_DEVEUI   = 9,$/;"	e	enum:__anon128
OFF_JR_DEVNONCE	lorabase.h	/^    OFF_JR_DEVNONCE = 17,$/;"	e	enum:__anon128
OFF_JR_HDR	lorabase.h	/^    OFF_JR_HDR      = 0,$/;"	e	enum:__anon128
OFF_JR_MIC	lorabase.h	/^    OFF_JR_MIC      = 19,$/;"	e	enum:__anon128
ON_LMIC_EVENT	oslmic.h	84;"	d
OPMODE_CAD	radio.c	211;"	d	file:
OPMODE_FSRX	radio.c	208;"	d	file:
OPMODE_FSTX	radio.c	206;"	d	file:
OPMODE_LORA	radio.c	202;"	d	file:
OPMODE_MASK	radio.c	203;"	d	file:
OPMODE_RX	radio.c	209;"	d	file:
OPMODE_RX_SINGLE	radio.c	210;"	d	file:
OPMODE_SLEEP	radio.c	204;"	d	file:
OPMODE_STANDBY	radio.c	205;"	d	file:
OPMODE_TX	radio.c	207;"	d	file:
OP_JOINING	lmic.h	/^       OP_JOINING  = 0x0004, \/\/ device joining in progress (blocks other activities)$/;"	e	enum:__anon21
OP_LINKDEAD	lmic.h	/^       OP_LINKDEAD = 0x1000, \/\/ link was reported as dead$/;"	e	enum:__anon21
OP_NEXTCHNL	lmic.h	/^       OP_NEXTCHNL = 0x0800, \/\/ find a new channel$/;"	e	enum:__anon21
OP_NONE	lmic.h	/^enum { OP_NONE     = 0x0000,$/;"	e	enum:__anon21
OP_PINGABLE	lmic.h	/^       OP_PINGABLE = 0x0400, \/\/ we're pingable$/;"	e	enum:__anon21
OP_PINGINI	lmic.h	/^       OP_PINGINI  = 0x0200, \/\/ pingable is initialized and scheduling active$/;"	e	enum:__anon21
OP_POLL	lmic.h	/^       OP_POLL     = 0x0010, \/\/ send empty UP frame to ACK confirmed DN\/fetch more DN data$/;"	e	enum:__anon21
OP_REJOIN	lmic.h	/^       OP_REJOIN   = 0x0020, \/\/ occasionally send JOIN REQUEST$/;"	e	enum:__anon21
OP_RNDTX	lmic.h	/^       OP_RNDTX    = 0x0100, \/\/ prevent TX lining up after a beacon$/;"	e	enum:__anon21
OP_SCAN	lmic.h	/^       OP_SCAN     = 0x0001, \/\/ radio scan to find a beacon$/;"	e	enum:__anon21
OP_SHUTDOWN	lmic.h	/^       OP_SHUTDOWN = 0x0040, \/\/ prevent MAC from doing anything$/;"	e	enum:__anon21
OP_TESTMODE	lmic.h	/^       OP_TESTMODE = 0x2000, \/\/ developer test mode$/;"	e	enum:__anon21
OP_TRACK	lmic.h	/^       OP_TRACK    = 0x0002, \/\/ track my networks beacon (netid)$/;"	e	enum:__anon21
OP_TXDATA	lmic.h	/^       OP_TXDATA   = 0x0008, \/\/ TX user data (buffered in pendTxData)$/;"	e	enum:__anon21
OP_TXRXPEND	lmic.h	/^       OP_TXRXPEND = 0x0080, \/\/ TX\/RX transaction pending$/;"	e	enum:__anon21
OS	oslmic.c	/^} OS;$/;"	v	typeref:struct:__anon151	file:
OSTICKS_PER_SEC	config.h	65;"	d
OSTICKS_PER_SEC	oslmic.h	118;"	d
PAMBL_FSK	lmic_bandplan.h	150;"	d
PAMBL_SYMS	lmic_bandplan.h	149;"	d
PRERX_FSK	lmic_bandplan.h	151;"	d
RADIO_RST	lmic.h	/^enum { RADIO_RST=0, RADIO_TX=1, RADIO_RX=2, RADIO_RXON=3 };$/;"	e	enum:__anon19
RADIO_RX	lmic.h	/^enum { RADIO_RST=0, RADIO_TX=1, RADIO_RX=2, RADIO_RXON=3 };$/;"	e	enum:__anon19
RADIO_RXON	lmic.h	/^enum { RADIO_RST=0, RADIO_TX=1, RADIO_RX=2, RADIO_RXON=3 };$/;"	e	enum:__anon19
RADIO_TX	lmic.h	/^enum { RADIO_RST=0, RADIO_TX=1, RADIO_RX=2, RADIO_RXON=3 };$/;"	e	enum:__anon19
RESOLVE_TABLE	oslmic.h	229;"	d
RETRY_PERIOD_secs	lmic.h	/^enum { RETRY_PERIOD_secs  =     3 };  \/\/ secs - random period for retrying a confirmed send$/;"	e	enum:__anon11
RF_IMAGECAL_AUTOIMAGECAL_MASK	radio.c	256;"	d	file:
RF_IMAGECAL_AUTOIMAGECAL_OFF	radio.c	258;"	d	file:
RF_IMAGECAL_AUTOIMAGECAL_ON	radio.c	257;"	d	file:
RF_IMAGECAL_IMAGECAL_DONE	radio.c	264;"	d	file:
RF_IMAGECAL_IMAGECAL_MASK	radio.c	260;"	d	file:
RF_IMAGECAL_IMAGECAL_RUNNING	radio.c	263;"	d	file:
RF_IMAGECAL_IMAGECAL_START	radio.c	261;"	d	file:
RSSI_OFF	lorabase.h	/^enum { RSSI_OFF=64, SNR_SCALEUP=4 };$/;"	e	enum:__anon150
RXLEN_FSK	lmic_bandplan.h	152;"	d
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG1	radio.c	191;"	d	file:
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG2	radio.c	193;"	d	file:
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG2	radio.c	195;"	d	file:
RXMODE_RSSI	radio.c	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon152	file:
RXMODE_SCAN	radio.c	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon152	file:
RXMODE_SINGLE	radio.c	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon152	file:
RX_RAMPUP	oslmic.h	111;"	d
RegDioMapping1	radio.c	129;"	d	file:
RegDioMapping2	radio.c	130;"	d	file:
RegFifo	radio.c	34;"	d	file:
RegFrfLsb	radio.c	42;"	d	file:
RegFrfMid	radio.c	41;"	d	file:
RegFrfMsb	radio.c	40;"	d	file:
RegLna	radio.c	46;"	d	file:
RegOcp	radio.c	45;"	d	file:
RegOpMode	radio.c	35;"	d	file:
RegPaConfig	radio.c	43;"	d	file:
RegPaDac	radio.c	138;"	d	file:
RegPaRamp	radio.c	44;"	d	file:
RegVersion	radio.c	131;"	d	file:
SF10	lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF11	lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF12	lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF7	lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF8	lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF9	lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SFrfu	lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SIZEOFEXPR	oslmic.h	82;"	d
SNR_SCALEUP	lorabase.h	/^enum { RSSI_OFF=64, SNR_SCALEUP=4 };$/;"	e	enum:__anon150
STD_PREAMBLE_LEN	lorabase.h	/^enum { STD_PREAMBLE_LEN  =  8 };$/;"	e	enum:__anon47
SX1272_MC1_BW_125	radio.c	154;"	d	file:
SX1272_MC1_BW_250	radio.c	155;"	d	file:
SX1272_MC1_BW_500	radio.c	156;"	d	file:
SX1272_MC1_CR_4_5	radio.c	158;"	d	file:
SX1272_MC1_CR_4_6	radio.c	159;"	d	file:
SX1272_MC1_CR_4_7	radio.c	160;"	d	file:
SX1272_MC1_CR_4_8	radio.c	161;"	d	file:
SX1272_MC1_IMPLICIT_HEADER_MODE_ON	radio.c	162;"	d	file:
SX1272_MC1_LOW_DATA_RATE_OPTIMIZE	radio.c	164;"	d	file:
SX1272_MC1_RX_PAYLOAD_CRCON	radio.c	163;"	d	file:
SX1272_MC2_FSK	radio.c	146;"	d	file:
SX1272_MC2_SF10	radio.c	150;"	d	file:
SX1272_MC2_SF11	radio.c	151;"	d	file:
SX1272_MC2_SF12	radio.c	152;"	d	file:
SX1272_MC2_SF7	radio.c	147;"	d	file:
SX1272_MC2_SF8	radio.c	148;"	d	file:
SX1272_MC2_SF9	radio.c	149;"	d	file:
SX1272_PAC_PA_SELECT_PA_BOOST	radio.c	166;"	d	file:
SX1272_PAC_PA_SELECT_RFIO_PIN	radio.c	167;"	d	file:
SX1276_MC1_BW_125	radio.c	171;"	d	file:
SX1276_MC1_BW_250	radio.c	172;"	d	file:
SX1276_MC1_BW_500	radio.c	173;"	d	file:
SX1276_MC1_CR_4_5	radio.c	174;"	d	file:
SX1276_MC1_CR_4_6	radio.c	175;"	d	file:
SX1276_MC1_CR_4_7	radio.c	176;"	d	file:
SX1276_MC1_CR_4_8	radio.c	177;"	d	file:
SX1276_MC1_IMPLICIT_HEADER_MODE_ON	radio.c	179;"	d	file:
SX1276_MC2_RX_PAYLOAD_CRCON	radio.c	182;"	d	file:
SX1276_MC3_AGCAUTO	radio.c	186;"	d	file:
SX1276_MC3_LOW_DATA_RATE_OPTIMIZE	radio.c	185;"	d	file:
TABLE_GETTER	oslmic.h	249;"	d
TABLE_GET_OSTIME	oslmic.h	241;"	d
TABLE_GET_S1	oslmic.h	236;"	d
TABLE_GET_S2	oslmic.h	238;"	d
TABLE_GET_S4	oslmic.h	240;"	d
TABLE_GET_U1	oslmic.h	235;"	d
TABLE_GET_U1_TWODIM	oslmic.h	242;"	d
TABLE_GET_U2	oslmic.h	237;"	d
TABLE_GET_U4	oslmic.h	239;"	d
TIME_RESYNC	lmic.h	/^enum { TIME_RESYNC        = 6*128 }; \/\/ secs$/;"	e	enum:__anon7
TXCONF_ATTEMPTS	lmic.h	/^enum { TXCONF_ATTEMPTS    =   8 };   \/\/!< Transmit attempts for confirmed frames$/;"	e	enum:__anon3
TXRX_ACK	lmic.h	/^enum { TXRX_ACK    = 0x80,   \/\/ confirmed UP frame was acked$/;"	e	enum:__anon22
TXRX_BCNEXT_secs	lmic.h	/^enum { TXRX_BCNEXT_secs   =     2 };  \/\/ secs - earliest start after beacon time$/;"	e	enum:__anon10
TXRX_DNW1	lmic.h	/^       TXRX_DNW1   = 0x01,   \/\/ received in 1st DN slot$/;"	e	enum:__anon22
TXRX_DNW2	lmic.h	/^       TXRX_DNW2   = 0x02,   \/\/ received in 2dn DN slot$/;"	e	enum:__anon22
TXRX_GUARD_ms	lmic.h	/^enum { TXRX_GUARD_ms      =  6000 };  \/\/ msecs - don't start TX-RX transaction before beacon$/;"	e	enum:__anon8
TXRX_GUARD_osticks	lmic_bandplan.h	155;"	d
TXRX_NACK	lmic.h	/^       TXRX_NACK   = 0x40,   \/\/ confirmed UP frame was not acked$/;"	e	enum:__anon22
TXRX_NOPORT	lmic.h	/^       TXRX_NOPORT = 0x20,   \/\/ set if a frame with a port was RXed, clr if no frame\/no port$/;"	e	enum:__anon22
TXRX_PING	lmic.h	/^       TXRX_PING   = 0x04 }; \/\/ received in a scheduled RX slot$/;"	e	enum:__anon22
TXRX_PORT	lmic.h	/^       TXRX_PORT   = 0x10,   \/\/ set if a frame with a port was RXed, LMIC.frame[LMIC.dataBeg-1] => port$/;"	e	enum:__anon22
TX_RAMPUP	oslmic.h	114;"	d
TYPEDEF_xref2band_t	oslmic.h	79;"	d
TYPEDEF_xref2chnldef_t	oslmic.h	78;"	d
TYPEDEF_xref2osjob_t	oslmic.h	80;"	d
TYPEDEF_xref2rps_t	oslmic.h	76;"	d
TYPEDEF_xref2rxsched_t	oslmic.h	77;"	d
US915_125kHz_UPFBASE	lorabase_us915.h	/^        US915_125kHz_UPFBASE = 902300000,$/;"	e	enum:__anon40
US915_125kHz_UPFSTEP	lorabase_us915.h	/^        US915_125kHz_UPFSTEP = 200000,$/;"	e	enum:__anon40
US915_500kHz_DNFBASE	lorabase_us915.h	/^        US915_500kHz_DNFBASE = 923300000,$/;"	e	enum:__anon40
US915_500kHz_DNFSTEP	lorabase_us915.h	/^        US915_500kHz_DNFSTEP = 600000$/;"	e	enum:__anon40
US915_500kHz_UPFBASE	lorabase_us915.h	/^        US915_500kHz_UPFBASE = 903000000,$/;"	e	enum:__anon40
US915_500kHz_UPFSTEP	lorabase_us915.h	/^        US915_500kHz_UPFSTEP = 1600000,$/;"	e	enum:__anon40
US915_DR_NONE	lorabase_us915.h	/^        US915_DR_NONE,$/;"	e	enum:_dr_us915_t
US915_DR_SF10	lorabase_us915.h	/^        US915_DR_SF10 = 0,$/;"	e	enum:_dr_us915_t
US915_DR_SF10CR	lorabase_us915.h	/^        US915_DR_SF10CR,$/;"	e	enum:_dr_us915_t
US915_DR_SF11CR	lorabase_us915.h	/^        US915_DR_SF11CR,$/;"	e	enum:_dr_us915_t
US915_DR_SF12CR	lorabase_us915.h	/^        US915_DR_SF12CR = 8,$/;"	e	enum:_dr_us915_t
US915_DR_SF7	lorabase_us915.h	/^        US915_DR_SF7,$/;"	e	enum:_dr_us915_t
US915_DR_SF7CR	lorabase_us915.h	/^        US915_DR_SF7CR$/;"	e	enum:_dr_us915_t
US915_DR_SF8	lorabase_us915.h	/^        US915_DR_SF8,$/;"	e	enum:_dr_us915_t
US915_DR_SF8C	lorabase_us915.h	/^        US915_DR_SF8C,$/;"	e	enum:_dr_us915_t
US915_DR_SF8CR	lorabase_us915.h	/^        US915_DR_SF8CR,$/;"	e	enum:_dr_us915_t
US915_DR_SF9	lorabase_us915.h	/^        US915_DR_SF9,$/;"	e	enum:_dr_us915_t
US915_DR_SF9CR	lorabase_us915.h	/^        US915_DR_SF9CR,$/;"	e	enum:_dr_us915_t
US915_FREQ_MAX	lorabase_us915.h	/^        US915_FREQ_MAX = 928000000$/;"	e	enum:__anon41
US915_FREQ_MIN	lorabase_us915.h	/^        US915_FREQ_MIN = 902000000,$/;"	e	enum:__anon41
US915_LMIC_REGION_EIRP	lorabase_us915.h	/^enum { US915_LMIC_REGION_EIRP = 0 };         \/\/ region doesn't use EIRP, uses tx power$/;"	e	enum:__anon44
US915_TX_MAX_DBM	lorabase_us915.h	/^        US915_TX_MAX_DBM = 30           \/\/ 30 dBm (but not EIRP): assumes we're $/;"	e	enum:__anon42
USE_IDEETRON_AES	config.h	154;"	d
US_PER_OSTICK	config.h	64;"	d
US_PER_OSTICK_EXPONENT	config.h	62;"	d
_LMIC_CONFIG_PRECONDITIONS_H_	lmic_config_preconditions.h	50;"	d
_bw_t	lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	g
_cr_t	lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	g
_dr_as921_t	lorabase_au921.h	/^enum _dr_as921_t {$/;"	g
_dr_as923_t	lorabase_as923.h	/^enum _dr_as923_t {$/;"	g
_dr_code_t	lorabase.h	/^enum _dr_code_t {$/;"	g
_dr_configured_t	lorabase.h	/^enum _dr_configured_t {$/;"	g
_dr_eu868_t	lorabase_eu868.h	/^enum _dr_eu868_t {$/;"	g
_dr_in866_t	lorabase_in866.h	/^enum _dr_in866_t {$/;"	g
_dr_us915_t	lorabase_us915.h	/^enum _dr_us915_t {$/;"	g
_ev_t	lmic.h	/^enum _ev_t { EV_SCAN_TIMEOUT=1, EV_BEACON_FOUND,$/;"	g
_hal_hpp_	hal.h	29;"	d
_lmic_as923_h_	lmic_bandplan_as923.h	30;"	d
_lmic_au921_h_	lmic_bandplan_au921.h	30;"	d
_lmic_bandplan_h_	lmic_bandplan.h	30;"	d
_lmic_config_h_	config.h	2;"	d
_lmic_eu868_h_	lmic_bandplan_eu868.h	30;"	d
_lmic_eu_like_h_	lmic_eu_like.h	30;"	d
_lmic_h_	lmic.h	32;"	d
_lmic_in866_h_	lmic_bandplan_in866.h	30;"	d
_lmic_us915_h_	lmic_bandplan_us915.h	30;"	d
_lmic_us_like_h_	lmic_us_like.h	30;"	d
_lorabase_as923_h_	lorabase_as923.h	32;"	d
_lorabase_au921_h_	lorabase_au921.h	32;"	d
_lorabase_eu868_h_	lorabase_eu868.h	32;"	d
_lorabase_h_	lorabase.h	29;"	d
_lorabase_in866_h_	lorabase_in866.h	32;"	d
_lorabase_us915_h_	lorabase_us915.h	32;"	d
_oslmic_h_	oslmic.h	30;"	d
_sf_t	lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	g
activeChannels125khz	lmic.h	/^    u2_t        activeChannels125khz;$/;"	m	struct:lmic_t
activeChannels500khz	lmic.h	/^    u2_t        activeChannels500khz;$/;"	m	struct:lmic_t
adrAckReq	lmic.h	/^    s1_t        adrAckReq;    \/\/ counter until we reset data rate (0=off)$/;"	m	struct:lmic_t
adrChanged	lmic.h	/^    u1_t        adrChanged;$/;"	m	struct:lmic_t
adrEnabled	lmic.h	/^    u1_t        adrEnabled;$/;"	m	struct:lmic_t
adrTxPow	lmic.h	/^    s1_t        adrTxPow;     \/\/ ADR adjusted TX power$/;"	m	struct:lmic_t
aes_appendMic	lmic.c	/^static void aes_appendMic (xref2cu1_t key, u4_t devaddr, u4_t seqno, int dndir, xref2u1_t pdu, int len) {$/;"	f	file:
aes_appendMic0	lmic.c	/^static void aes_appendMic0 (xref2u1_t pdu, int len) {$/;"	f	file:
aes_cipher	lmic.c	/^static void aes_cipher (xref2cu1_t key, u4_t devaddr, u4_t seqno, int dndir, xref2u1_t payload, int len) {$/;"	f	file:
aes_encrypt	lmic.c	/^static void aes_encrypt (xref2u1_t pdu, int len) {$/;"	f	file:
aes_sessKeys	lmic.c	/^static void aes_sessKeys (u2_t devnonce, xref2cu1_t artnonce, xref2u1_t nwkkey, xref2u1_t artkey) {$/;"	f	file:
aes_verifyMic	lmic.c	/^static int aes_verifyMic (xref2cu1_t key, u4_t devaddr, u4_t seqno, int dndir, xref2u1_t pdu, int len) {$/;"	f	file:
aes_verifyMic0	lmic.c	/^static int aes_verifyMic0 (xref2u1_t pdu, int len) {$/;"	f	file:
artKey	lmic.h	/^    u1_t        artKey[16];   \/\/ application router session key$/;"	m	struct:lmic_t
assertDR	lorabase.h	/^inline dr_t  assertDR (dr_t dr) { return TABLE_GET_U1(_DR2RPS_CRC, dr+1)==ILLEGAL_RPS ? DR_DFLTMIN : dr; }   \/\/ force into a valid DR$/;"	f
avail	lmic.h	/^    ostime_t avail;     \/\/ channel is blocked until this time$/;"	m	struct:band_t
band_t	lmic.h	/^struct band_t {$/;"	s
band_t	oslmic.h	/^typedef      struct band_t band_t;$/;"	t	typeref:struct:band_t
bands	lmic.h	/^    band_t      bands[MAX_BANDS];$/;"	m	struct:lmic_t
bcnChnl	lmic.h	/^    u1_t        bcnChnl;$/;"	m	struct:lmic_t
bcnRxsyms	lmic.h	/^    u1_t        bcnRxsyms;    \/\/$/;"	m	struct:lmic_t
bcnRxtime	lmic.h	/^    ostime_t    bcnRxtime;$/;"	m	struct:lmic_t
bcninfo	lmic.h	/^    bcninfo_t   bcninfo;      \/\/ Last received beacon info$/;"	m	struct:lmic_t
bcninfoTries	lmic.h	/^    u1_t        bcninfoTries; \/\/ how often to try (scan mode only)$/;"	m	struct:lmic_t
bcninfo_t	lmic.h	/^struct bcninfo_t {$/;"	s
bcninfo_t	oslmic.h	/^typedef   struct bcninfo_t bcninfo_t;$/;"	t	typeref:struct:bcninfo_t
bit_t	oslmic.h	/^typedef uint8_t            bit_t;$/;"	t
buildDataFrame	lmic.c	/^static void buildDataFrame (void) {$/;"	f	file:
buildJoinRequest	lmic.c	/^static void buildJoinRequest (u1_t ftype) {$/;"	f	file:
bw_t	lorabase.h	/^typedef u1_t bw_t;$/;"	t
calcAirTime	lmic.c	/^ostime_t calcAirTime (rps_t rps, u1_t plen) {$/;"	f
calcBcnRxWindowFromMillis	lmic.c	/^static void calcBcnRxWindowFromMillis (u1_t ms, bit_t ini) {$/;"	f	file:
calcRxWindow	lmic.c	/^static ostime_t calcRxWindow (u1_t secs, dr_t dr) {$/;"	f	file:
channelDrMap	lmic.h	/^    u2_t        channelDrMap[MAX_CHANNELS];$/;"	m	struct:lmic_t
channelFreq	lmic.h	/^    u4_t        channelFreq[MAX_CHANNELS];$/;"	m	struct:lmic_t
channelMap	lmic.h	/^    u2_t        channelMap;$/;"	m	struct:lmic_t
channelMap	lmic.h	/^    u2_t        channelMap[(72+MAX_XCHANNELS+15)\/16];  \/\/ enabled bits$/;"	m	struct:lmic_t
check_sizeof_ostime_t	oslmic.h	/^    typedef int check_sizeof_ostime_t[(sizeof(ostime_t) == 4) ? 0 : -1];$/;"	t
chnldef_t	oslmic.h	/^typedef   struct chnldef_t chnldef_t;$/;"	t	typeref:struct:chnldef_t
clockError	lmic.h	/^    u2_t        clockError; \/\/ Inaccuracy in the clock. CLOCK_ERROR_MAX$/;"	m	struct:lmic_t
configChannel	radio.c	/^static void configChannel () {$/;"	f	file:
configLoraModem	radio.c	/^static void configLoraModem () {$/;"	f	file:
configPower	radio.c	/^static void configPower () {$/;"	f	file:
cr_t	lorabase.h	/^typedef u1_t cr_t;$/;"	t
dataBeg	lmic.h	/^    u1_t        dataBeg;    \/\/ 0 or start of data (dataBeg-1 is port)$/;"	m	struct:lmic_t
dataLen	lmic.h	/^    u1_t        dataLen;    \/\/ 0 no data or zero length data, >0 byte count of data$/;"	m	struct:lmic_t
datarate	lmic.h	/^    u1_t        datarate;     \/\/ current data rate$/;"	m	struct:lmic_t
deadline	oslmic.h	/^    ostime_t deadline;$/;"	m	struct:osjob_t
decDR	lorabase.h	/^inline dr_t  decDR    (dr_t dr) { return TABLE_GET_U1(_DR2RPS_CRC, dr  )==ILLEGAL_RPS ? dr : (dr_t)(dr-1); } \/\/ decrease data rate$/;"	f
decodeBeacon	lmic.c	/^static int decodeBeacon (void) {$/;"	f	file:
decodeFrame	lmic.c	/^static bit_t decodeFrame (void) {$/;"	f	file:
devNonce	lmic.h	/^    u2_t        devNonce;     \/\/ last generated nonce$/;"	m	struct:lmic_t
devaddr	lmic.h	/^    devaddr_t   devaddr;$/;"	m	struct:lmic_t
devaddr_t	lorabase.h	/^typedef u4_t devaddr_t;$/;"	t
devsAns	lmic.h	/^    bit_t       devsAns;      \/\/ device status answer pending$/;"	m	struct:lmic_t
dn2Ans	lmic.h	/^    u1_t        dn2Ans;       \/\/ 0=no answer pend, 0x80+ACKs$/;"	m	struct:lmic_t
dn2Dr	lmic.h	/^    u1_t        dn2Dr;$/;"	m	struct:lmic_t
dn2Freq	lmic.h	/^    u4_t        dn2Freq;$/;"	m	struct:lmic_t
dnConf	lmic.h	/^    u1_t        dnConf;       \/\/ dn frame confirm pending: LORA::FCT_ACK or 0$/;"	m	struct:lmic_t
dndr	lmic.h	/^    u1_t        dndr;$/;"	m	struct:lmic_t
dndr2rps	lorabase.h	/^inline rps_t dndr2rps (dr_t dr) { return setNocrc(updr2rps(dr),1); }$/;"	f
dr	lmic.h	/^    u1_t     dr;$/;"	m	struct:rxsched_t
dr2hsym	lmic_bandplan_as923.h	45;"	d
dr2hsym	lmic_bandplan_au921.h	46;"	d
dr2hsym	lmic_bandplan_eu868.h	45;"	d
dr2hsym	lmic_bandplan_in866.h	45;"	d
dr2hsym	lmic_bandplan_us915.h	45;"	d
dr_t	lorabase.h	/^typedef u1_t dr_t;$/;"	t
drift	lmic.h	/^    s2_t        drift;        \/\/ last measured drift$/;"	m	struct:lmic_t
dutyCapAns	lmic.h	/^    bit_t       dutyCapAns;   \/\/ have to ACK duty cycle settings$/;"	m	struct:lmic_t
engineUpdate	lmic.c	/^static void engineUpdate (void) {$/;"	f	file:
errcr	lmic.h	/^    u1_t        errcr;        \/\/ error coding rate (used for TX only)$/;"	m	struct:lmic_t
ev_t	lmic.h	/^typedef enum _ev_t ev_t;$/;"	t	typeref:enum:_ev_t
flags	lmic.h	/^    u1_t     flags;   \/\/!< Last beacon reception and tracking states. See BCN_* values.$/;"	m	struct:bcninfo_t
frame	lmic.h	/^    u1_t        frame[MAX_LEN_FRAME];$/;"	m	struct:lmic_t
freq	lmic.h	/^    u4_t        freq;$/;"	m	struct:lmic_t
freq	lmic.h	/^    u4_t     freq;$/;"	m	struct:rxsched_t
func	oslmic.h	/^    osjobcb_t  func;$/;"	m	struct:osjob_t
getBw	lorabase.h	/^inline bw_t  getBw   (rps_t params)            { return  (bw_t)((params >> 3) & 0x3); }$/;"	f
getCr	lorabase.h	/^inline cr_t  getCr   (rps_t params)            { return  (cr_t)((params >> 5) & 0x3); }$/;"	f
getIh	lorabase.h	/^inline int   getIh   (rps_t params)            { return        ((params >> 8) & 0xFF); }$/;"	f
getNocrc	lorabase.h	/^inline int   getNocrc(rps_t params)            { return        ((params >> 7) & 0x1); }$/;"	f
getSensitivity	lmic.c	/^int getSensitivity (rps_t rps) {$/;"	f
getSf	lorabase.h	/^inline sf_t  getSf   (rps_t params)            { return   (sf_t)(params &  0x7); }$/;"	f
globalDutyAvail	lmic.h	/^    ostime_t    globalDutyAvail; \/\/ time device can send again$/;"	m	struct:lmic_t
globalDutyRate	lmic.h	/^    u1_t        globalDutyRate;  \/\/ max rate: 1\/2^k$/;"	m	struct:lmic_t
incDR	lorabase.h	/^inline dr_t  incDR    (dr_t dr) { return TABLE_GET_U1(_DR2RPS_CRC, dr+2)==ILLEGAL_RPS ? dr : (dr_t)(dr+1); } \/\/ increase data rate$/;"	f
info	lmic.h	/^    u1_t     info;    \/\/!< Info field of last beacon (valid only if BCN_FULL set)$/;"	m	struct:bcninfo_t
intvExp	lmic.h	/^    u1_t     intvExp;   \/\/ 0..7$/;"	m	struct:rxsched_t
isFasterDR	lorabase.h	/^inline int isFasterDR (dr_t dr1, dr_t dr2) { return dr1 > dr2; }$/;"	f
isSlowerDR	lorabase.h	/^inline int isSlowerDR (dr_t dr1, dr_t dr2) { return dr1 < dr2; }$/;"	f
isTESTMODE	lmic_bandplan.h	166;"	d
jreqDone	lmic.c	/^static void jreqDone (xref2osjob_t osjob) {$/;"	f	file:
ladrAns	lmic.h	/^    bit_t       ladrAns;      \/\/ link adr adapt answer pending$/;"	m	struct:lmic_t
lastDriftDiff	lmic.h	/^    s2_t        lastDriftDiff;$/;"	m	struct:lmic_t
lastchnl	lmic.h	/^    u1_t     lastchnl;  \/\/ last used channel$/;"	m	struct:band_t
lat	lmic.h	/^    s4_t     lat;     \/\/!< Lat field of last beacon (valid only if BCN_FULL set)$/;"	m	struct:bcninfo_t
lmic_t	lmic.h	/^struct lmic_t {$/;"	s
lon	lmic.h	/^    s4_t     lon;     \/\/!< Lon field of last beacon (valid only if BCN_FULL set)$/;"	m	struct:bcninfo_t
lowerDR	lorabase.h	/^inline dr_t  lowerDR  (dr_t dr, u1_t n) { while(n--){dr=decDR(dr);} return dr; } \/\/ decrease data rate by n steps$/;"	f
makeRps	lorabase.h	/^inline rps_t makeRps (sf_t sf, bw_t bw, cr_t cr, int ih, int nocrc) {$/;"	f
margin	lmic.h	/^    u1_t        margin;$/;"	m	struct:lmic_t
maxDriftDiff	lmic.h	/^    s2_t        maxDriftDiff;$/;"	m	struct:lmic_t
maxFrameLen	lmic_bandplan_as923.h	37;"	d
maxFrameLen	lmic_bandplan_au921.h	41;"	d
maxFrameLen	lmic_bandplan_eu868.h	37;"	d
maxFrameLen	lmic_bandplan_in866.h	37;"	d
maxFrameLen	lmic_bandplan_us915.h	40;"	d
micB0	lmic.c	/^static void micB0 (u4_t devaddr, u4_t seqno, int dndir, int len) {$/;"	f	file:
missedBcns	lmic.h	/^    u1_t        missedBcns;   \/\/ unable to track last N beacons$/;"	m	struct:lmic_t
moreData	lmic.h	/^    u1_t        moreData;     \/\/ NWK has more data pending$/;"	m	struct:lmic_t
ms2osticks	oslmic.h	127;"	d
ms2osticksCeil	oslmic.h	134;"	d
ms2osticksRound	oslmic.h	135;"	d
netid	lmic.h	/^    u4_t        netid;        \/\/ current network id (~0 - none)$/;"	m	struct:lmic_t
next	oslmic.h	/^    struct osjob_t* next;$/;"	m	struct:osjob_t	typeref:struct:osjob_t::osjob_t
noRXIQinversion	lmic.h	/^    u1_t        noRXIQinversion;$/;"	m	struct:lmic_t
nwkKey	lmic.h	/^    u1_t        nwkKey[16];   \/\/ network session key$/;"	m	struct:lmic_t
onBcnRx	lmic.c	/^static void onBcnRx (xref2osjob_t job) {$/;"	f	file:
onJoinFailed	lmic.c	/^static void onJoinFailed (xref2osjob_t osjob) {$/;"	f	file:
opmode	lmic.h	/^    u2_t        opmode;$/;"	m	struct:lmic_t
opmode	radio.c	/^static void opmode (u1_t mode) {$/;"	f	file:
opmodeFSK	radio.c	/^static void opmodeFSK() {$/;"	f	file:
opmodeLora	radio.c	/^static void opmodeLora() {$/;"	f	file:
os_clearCallback	oslmic.c	/^void os_clearCallback (osjob_t* job) {$/;"	f
os_clearMem	oslmic.h	66;"	d
os_copyMem	oslmic.h	67;"	d
os_crc16	lmic.c	/^u2_t os_crc16 (xref2cu1_t data, uint len) {$/;"	f
os_getBattLevel	lmic.c	/^u1_t os_getBattLevel (void) {$/;"	f
os_getRndU1	oslmic.h	94;"	d
os_getRndU2	oslmic.h	209;"	d
os_getTime	oslmic.c	/^ostime_t os_getTime () {$/;"	f
os_init	oslmic.c	/^void os_init() {$/;"	f
os_init_ex	oslmic.c	/^int os_init_ex (const void *pintable) {$/;"	f
os_radio	radio.c	/^void os_radio (u1_t mode) {$/;"	f
os_rlsbf2	lmic.c	/^u2_t os_rlsbf2 (xref2cu1_t buf) {$/;"	f
os_rlsbf4	lmic.c	/^u4_t os_rlsbf4 (xref2cu1_t buf) {$/;"	f
os_rmsbf4	lmic.c	/^u4_t os_rmsbf4 (xref2cu1_t buf) {$/;"	f
os_runloop	oslmic.c	/^void os_runloop () {$/;"	f
os_runloop_once	oslmic.c	/^void os_runloop_once() {$/;"	f
os_setCallback	oslmic.c	/^void os_setCallback (osjob_t* job, osjobcb_t cb) {$/;"	f
os_setTimedCallback	oslmic.c	/^void os_setTimedCallback (osjob_t* job, ostime_t time, osjobcb_t cb) {$/;"	f
os_wlsbf2	lmic.c	/^void os_wlsbf2 (xref2u1_t buf, u2_t v) {$/;"	f
os_wlsbf4	lmic.c	/^void os_wlsbf4 (xref2u1_t buf, u4_t v) {$/;"	f
os_wmsbf4	lmic.c	/^void os_wmsbf4 (xref2u1_t buf, u4_t v) {$/;"	f
osjob	lmic.h	/^    osjob_t     osjob;$/;"	m	struct:lmic_t
osjob_t	oslmic.h	/^struct osjob_t {$/;"	s
osjob_t	oslmic.h	/^typedef     struct osjob_t osjob_t;$/;"	t	typeref:struct:osjob_t
osjobcb_t	oslmic.h	/^typedef void (*osjobcb_t) (struct osjob_t*);$/;"	t
osticks2ms	oslmic.h	129;"	d
osticks2us	oslmic.h	130;"	d
ostime_t	oslmic.h	/^typedef s4_t  ostime_t;$/;"	t
pendTxConf	lmic.h	/^    u1_t        pendTxConf;   \/\/ confirmed data$/;"	m	struct:lmic_t
pendTxData	lmic.h	/^    u1_t        pendTxData[MAX_LEN_PAYLOAD];$/;"	m	struct:lmic_t
pendTxLen	lmic.h	/^    u1_t        pendTxLen;    \/\/ +0x80 = confirmed$/;"	m	struct:lmic_t
pendTxPort	lmic.h	/^    u1_t        pendTxPort;$/;"	m	struct:lmic_t
ping	lmic.h	/^    rxsched_t   ping;         \/\/ pingable setup$/;"	m	struct:lmic_t
pingSetAns	lmic.h	/^    u1_t        pingSetAns;   \/\/ answer set cmd and ACK bits$/;"	m	struct:lmic_t
pow2dBm	lmic_bandplan_as923.h	40;"	d
pow2dBm	lmic_bandplan_au921.h	43;"	d
pow2dBm	lmic_bandplan_eu868.h	40;"	d
pow2dBm	lmic_bandplan_in866.h	40;"	d
pow2dBm	lmic_bandplan_us915.h	42;"	d
processBeacon	lmic.c	/^static void processBeacon (xref2osjob_t osjob) {$/;"	f	file:
processDnData	lmic.c	/^static bit_t processDnData (void) {$/;"	f	file:
processJoinAccept	lmic.c	/^static bit_t processJoinAccept (void) {$/;"	f	file:
processPingRx	lmic.c	/^static void processPingRx (xref2osjob_t osjob) {$/;"	f	file:
processRx1DnData	lmic.c	/^static void processRx1DnData (xref2osjob_t osjob) {$/;"	f	file:
processRx1Jacc	lmic.c	/^static void processRx1Jacc (xref2osjob_t osjob) {$/;"	f	file:
processRx2DnData	lmic.c	/^static void processRx2DnData (xref2osjob_t osjob) {$/;"	f	file:
processRx2DnDataDelay	lmic.c	/^static void processRx2DnDataDelay (xref2osjob_t osjob) {$/;"	f	file:
processRx2Jacc	lmic.c	/^static void processRx2Jacc (xref2osjob_t osjob) {$/;"	f	file:
radio_init	radio.c	/^int radio_init () {$/;"	f
radio_irq_handler	radio.c	/^void radio_irq_handler (u1_t dio) {$/;"	f
radio_rand1	radio.c	/^u1_t radio_rand1 () {$/;"	f
radio_rssi	radio.c	/^u1_t radio_rssi () {$/;"	f
randbuf	radio.c	/^static u1_t randbuf[16];$/;"	v	file:
readBuf	radio.c	/^static void readBuf (u1_t addr, xref2u1_t buf, u1_t len) {$/;"	f	file:
readReg	radio.c	/^static u1_t readReg (u1_t addr) {$/;"	f	file:
rejoinCnt	lmic.h	/^    u1_t        rejoinCnt;    \/\/ adjustment for rejoin datarate$/;"	m	struct:lmic_t
reportEvent	lmic.c	/^static void reportEvent (ev_t ev) {$/;"	f	file:
rps	lmic.h	/^    rps_t       rps;$/;"	m	struct:lmic_t
rps_t	lorabase.h	/^typedef u2_t rps_t;$/;"	t
rssi	lmic.h	/^    s1_t        rssi;$/;"	m	struct:lmic_t
rssi	lmic.h	/^    s1_t     rssi;    \/\/!< Adjusted RSSI value of last received beacon$/;"	m	struct:bcninfo_t
runEngineUpdate	lmic.c	/^static void runEngineUpdate (xref2osjob_t osjob) {$/;"	f	file:
runReset	lmic.c	/^static void runReset (xref2osjob_t osjob) {$/;"	f	file:
runnablejobs	oslmic.c	/^    osjob_t* runnablejobs;$/;"	m	struct:__anon151	file:
rx1DrOffset	lmic.h	/^    u1_t        rx1DrOffset;  \/\/ captured from join. zero by default.$/;"	m	struct:lmic_t
rxDelay	lmic.h	/^    u1_t        rxDelay;      \/\/ Rx delay after TX$/;"	m	struct:lmic_t
rxbase	lmic.h	/^    ostime_t rxbase;$/;"	m	struct:rxsched_t
rxfsk	radio.c	/^static void rxfsk (u1_t rxmode) {$/;"	f	file:
rxlora	radio.c	/^static void rxlora (u1_t rxmode) {$/;"	f	file:
rxschedInit	lmic.c	/^static void rxschedInit (xref2rxsched_t rxsched) {$/;"	f	file:
rxschedNext	lmic.c	/^static bit_t rxschedNext (xref2rxsched_t rxsched, ostime_t cando) {$/;"	f	file:
rxsched_t	lmic.h	/^struct rxsched_t {$/;"	s
rxsched_t	oslmic.h	/^typedef   struct rxsched_t rxsched_t;$/;"	t	typeref:struct:rxsched_t
rxsyms	lmic.h	/^    u1_t        rxsyms;$/;"	m	struct:lmic_t
rxsyms	lmic.h	/^    u1_t     rxsyms;$/;"	m	struct:rxsched_t
rxtime	lmic.h	/^    ostime_t    rxtime;$/;"	m	struct:lmic_t
rxtime	lmic.h	/^    ostime_t rxtime;    \/\/ start of next spot$/;"	m	struct:rxsched_t
s1_t	oslmic.h	/^typedef int8_t             s1_t;$/;"	t
s2_t	oslmic.h	/^typedef int16_t            s2_t;$/;"	t
s4_t	oslmic.h	/^typedef int32_t            s4_t;$/;"	t
sameSfBw	lorabase.h	/^inline int sameSfBw(rps_t r1, rps_t r2) { return ((r1^r2)&0x1F) == 0; }$/;"	f
scan_mac_cmds	lmic.c	/^scan_mac_cmds($/;"	f	file:
schedRx12	lmic.c	/^static void schedRx12 (ostime_t delay, osjobcb_t func, u1_t dr) {$/;"	f	file:
scheduledjobs	oslmic.c	/^    osjob_t* scheduledjobs;$/;"	m	struct:__anon151	file:
sec2osticks	oslmic.h	128;"	d
seqnoDn	lmic.h	/^    u4_t        seqnoDn;      \/\/ device level down stream seqno$/;"	m	struct:lmic_t
seqnoUp	lmic.h	/^    u4_t        seqnoUp;$/;"	m	struct:lmic_t
setBw	lorabase.h	/^inline rps_t setBw   (rps_t params, bw_t cr)   { return (rps_t)((params & ~0x18) | (cr<<3)); }$/;"	f
setCr	lorabase.h	/^inline rps_t setCr   (rps_t params, cr_t cr)   { return (rps_t)((params & ~0x60) | (cr<<5)); }$/;"	f
setDrTxpow	lmic.c	/^static void setDrTxpow (u1_t reason, u1_t dr, s1_t pow) {$/;"	f	file:
setIh	lorabase.h	/^inline rps_t setIh   (rps_t params, int ih)    { return (rps_t)((params & ~0xFF00) | (ih<<8)); }$/;"	f
setNextChannel	lmic_us_like.c	/^static void setNextChannel(uint start, uint end, uint count) {$/;"	f	file:
setNocrc	lorabase.h	/^inline rps_t setNocrc(rps_t params, int nocrc) { return (rps_t)((params & ~0x80) | (nocrc<<7)); }$/;"	f
setSf	lorabase.h	/^inline rps_t setSf   (rps_t params, sf_t sf)   { return (rps_t)((params & ~0x7) | sf); }$/;"	f
setupRx1	lmic.c	/^static void setupRx1 (osjobcb_t func) {$/;"	f	file:
setupRx1DnData	lmic.c	/^static void setupRx1DnData (xref2osjob_t osjob) {$/;"	f	file:
setupRx1Jacc	lmic.c	/^static void setupRx1Jacc (xref2osjob_t osjob) {$/;"	f	file:
setupRx2	lmic.c	/^static void setupRx2 (void) {$/;"	f	file:
setupRx2DnData	lmic.c	/^static void setupRx2DnData (xref2osjob_t osjob) {$/;"	f	file:
setupRx2Jacc	lmic.c	/^static void setupRx2Jacc (xref2osjob_t osjob) {$/;"	f	file:
sf_t	lorabase.h	/^typedef u1_t sf_t;$/;"	t
slot	lmic.h	/^    u1_t     slot;      \/\/ runs from 0 to 128$/;"	m	struct:rxsched_t
snchAns	lmic.h	/^    u1_t        snchAns;      \/\/ answer set new channel$/;"	m	struct:lmic_t
snr	lmic.h	/^    s1_t        snr;$/;"	m	struct:lmic_t
snr	lmic.h	/^    s1_t     snr;     \/\/!< Scaled SNR value of last received beacon$/;"	m	struct:bcninfo_t
startJoining	lmic.c	/^static void startJoining (xref2osjob_t osjob) {$/;"	f	file:
startRxBcn	lmic.c	/^static void startRxBcn (xref2osjob_t osjob) {$/;"	f	file:
startRxPing	lmic.c	/^static void startRxPing (xref2osjob_t osjob) {$/;"	f	file:
startScan	lmic.c	/^static void startScan (void) {$/;"	f	file:
startrx	radio.c	/^static void startrx (u1_t rxmode) {$/;"	f	file:
starttx	radio.c	/^static void starttx () {$/;"	f	file:
stateJustJoined	lmic.c	/^static void stateJustJoined (void) {$/;"	f	file:
str_t	oslmic.h	/^typedef const char* str_t;$/;"	t
table_get_ostime	oslmic.h	/^    inline ostime_t table_get_ostime(const ostime_t *table, size_t index) { return table[index]; }$/;"	f
table_get_s1	oslmic.h	/^    inline s1_t table_get_s1(const s1_t *table, size_t index) { return table[index]; }$/;"	f
table_get_s2	oslmic.h	/^    inline s2_t table_get_s2(const s2_t *table, size_t index) { return table[index]; }$/;"	f
table_get_s4	oslmic.h	/^    inline s4_t table_get_s4(const s4_t *table, size_t index) { return table[index]; }$/;"	f
table_get_u1	oslmic.h	/^    inline u1_t table_get_u1(const u1_t *table, size_t index) { return table[index]; }$/;"	f
table_get_u2	oslmic.h	/^    inline u2_t table_get_u2(const u2_t *table, size_t index) { return table[index]; }$/;"	f
table_get_u4	oslmic.h	/^    inline u4_t table_get_u4(const u4_t *table, size_t index) { return table[index]; }$/;"	f
time	lmic.h	/^    u4_t     time;    \/\/!< GPS time in seconds of last beacon (received or surrogate)$/;"	m	struct:bcninfo_t
txChnl	lmic.h	/^    u1_t        txChnl;          \/\/ channel for next TX$/;"	m	struct:lmic_t
txCnt	lmic.h	/^    u1_t        txCnt;$/;"	m	struct:lmic_t
txDelay	lmic.c	/^static void txDelay (ostime_t reftime, u1_t secSpan) {$/;"	f	file:
txDone	lmic.c	/^static void txDone (ostime_t delay, osjobcb_t func) {$/;"	f	file:
txParam	lmic.h	/^    u1_t        txParam;        \/\/ the saved TX param byte.$/;"	m	struct:lmic_t
txParamSetupAns	lmic.h	/^    bit_t       txParamSetupAns; \/\/ transmit setup answer pending.$/;"	m	struct:lmic_t
txcap	lmic.h	/^    u2_t     txcap;     \/\/ duty cycle limitation: 1\/txcap$/;"	m	struct:band_t
txend	lmic.h	/^    ostime_t    txend;$/;"	m	struct:lmic_t
txfsk	radio.c	/^static void txfsk () {$/;"	f	file:
txlora	radio.c	/^static void txlora () {$/;"	f	file:
txpow	lmic.h	/^    s1_t        txpow;     \/\/ dBm$/;"	m	struct:lmic_t
txpow	lmic.h	/^    s1_t     txpow;     \/\/ maximum TX power$/;"	m	struct:band_t
txrxFlags	lmic.h	/^    u1_t        txrxFlags;  \/\/ transaction flags (TX-RX combo)$/;"	m	struct:lmic_t
txtime	lmic.h	/^    ostime_t txtime;  \/\/!< Time when the beacon was sent$/;"	m	struct:bcninfo_t
u1_t	oslmic.h	/^typedef uint8_t            u1_t;$/;"	t
u2_t	oslmic.h	/^typedef uint16_t           u2_t;$/;"	t
u4_t	oslmic.h	/^typedef uint32_t           u4_t;$/;"	t
uint	oslmic.h	/^typedef unsigned int       uint;$/;"	t
unlinkjob	oslmic.c	/^static int unlinkjob (osjob_t** pnext, osjob_t* job) {$/;"	f	file:
upRepeat	lmic.h	/^    u1_t        upRepeat;     \/\/ configured up repeat$/;"	m	struct:lmic_t
updataDone	lmic.c	/^static void updataDone (xref2osjob_t osjob) {$/;"	f	file:
updr2rps	lorabase.h	/^inline rps_t updr2rps (dr_t dr) { return (rps_t)TABLE_GET_U1(_DR2RPS_CRC, dr+1); }$/;"	f
us2osticks	oslmic.h	126;"	d
us2osticksCeil	oslmic.h	132;"	d
us2osticksRound	oslmic.h	133;"	d
validDR	lorabase.h	/^inline bit_t validDR  (dr_t dr) { return TABLE_GET_U1(_DR2RPS_CRC, dr+1)!=ILLEGAL_RPS; } \/\/ in range$/;"	f
writeBuf	radio.c	/^static void writeBuf (u1_t addr, xref2u1_t buf, u1_t len) {$/;"	f	file:
writeReg	radio.c	/^static void writeReg (u1_t addr, u1_t data ) {$/;"	f	file:
xchDrMap	lmic.h	/^    u2_t        xchDrMap[MAX_XCHANNELS];   \/\/ extra channel datarate ranges  ---XXX: ditto$/;"	m	struct:lmic_t
xchFreq	lmic.h	/^    u4_t        xchFreq[MAX_XCHANNELS];    \/\/ extra channel frequencies (if device is behind a repeater)$/;"	m	struct:lmic_t
xref2cu1_t	oslmic.h	/^typedef        const u1_t* xref2cu1_t;$/;"	t
xref2u1_t	oslmic.h	/^typedef              u1_t* xref2u1_t;$/;"	t
